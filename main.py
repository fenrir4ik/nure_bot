import telebot
import sqlite3
import re
import datetime
from telebot import types
from email_validator import validate_email, EmailNotValidError
import os

bot = telebot.TeleBot('1093407058:AAEmG84mCBHEVX3Mt1raN4xDN94LOcB913Y')

def execute_query(sql, params = None):
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        if params is None:
            cursor.execute(sql)
        else:
            cursor.execute(sql, params)
        conn.commit()
        return cursor.fetchall()
    except Exception as ex:
        print(ex)
def get_state(message):
    uid = int(message.from_user.id)
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        cursor.execute("select status from USER us join STATE st on status_id = st.id where us.id = ?", [uid])
        conn.commit()
        return cursor.fetchone()[0]
    except Exception as ex:
        print(ex)
def set_state(message, state):
    uid = int(message.from_user.id)
    try:
        state_id = execute_query("select id from state where status = ?", [state])[0][0]
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        cursor.execute("update user set status_id = ? where id = ?", [state_id, uid])
        conn.commit()
        if state == 'Chill':
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            role = get_role(message)
            if role in ('Admin', 'Student', 'Teacher'):
                markup.row('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', '–ö—É—Ä—Å—ã', '–ó–∞–Ω—è—Ç–∏—è')
                if role in ('Admin', 'Teacher'):
                    markup.row('–î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å', '–ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å', '–£–¥–∞–ª–∏—Ç—å –∫—É—Ä—Å')
                    markup.row('–î–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ', '–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ', '–£–¥–∞–ª–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ')
                    if role in ('Admin'):
                            markup.row('–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è', '–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', '–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π')
            markup.row('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π', '–ò–∑–º–µ–Ω–∏—Ç—å –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
            bot.send_message(message.chat.id,
                             '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?',
                             reply_markup=markup)
    except Exception as ex:
        print(ex)
def set_name(message, name):
    uid = int(message.from_user.id)
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        cursor.execute("update user set name = ? where id = ?", [name, uid])
        conn.commit()
    except Exception as ex:
        print(ex)
def set_surname(message, surname):
    uid = int(message.from_user.id)
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        cursor.execute("update user set surname = ? where id = ?", [surname, uid])
        conn.commit()
    except Exception as ex:
        print(ex)
def set_number(message, num):
    uid = int(message.from_user.id)
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        cursor.execute("update user set tel_no = ? where id = ?", [num, uid])
        conn.commit()
    except Exception as ex:
        print(ex)
def set_email(message, email):
    uid = int(message.from_user.id)
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        cursor.execute("update user set email = ? where id = ?", [email, uid])
        conn.commit()
    except Exception as ex:
        print(ex)
def set_role(message, role):
    uid = int(message.from_user.id)
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        rl = execute_query("select id from role where role = ?", [role])[0][0]
        cursor.execute("update user set role = ? where id = ?", [rl, uid])
        conn.commit()
    except Exception as ex:
        print(ex)
def set_role_by_id(id, role):
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        rl = execute_query("select id from role where role = ?", [role])[0][0]
        cursor.execute("update user set role = ? where id = ?", [rl, id])
        conn.commit()
    except Exception as ex:
        print(ex)
def get_role(message):
    uid = int(message.from_user.id)
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        cursor.execute("select role.role from user join role on user.role = role.id where user.id = ?", [uid])
        conn.commit()
        return cursor.fetchone()[0]
    except Exception as ex:
        print(ex)
def get_role_by_id(id):
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        cursor.execute("select role.role from user join role on user.role = role.id where user.id = ?", [id])
        conn.commit()
        return cursor.fetchone()[0]
    except Exception as ex:
        print(ex)
def is_teacher(id):
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        cursor.execute("select role.role from user join role on user.role = role.id where user.id = ?", [id])
        conn.commit()
        return cursor.fetchone()[0] == 'Teacher'
    except Exception as ex:
        print(ex)
def in_system(id):
    return bool(execute_query("select count(*) from user where id = ?", [id])[0][0])
def get_teachers_info():
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        cursor.execute("select name, surname, telegram_id, user.id from user join role on user.role = role.id where role.role = 'Teacher' order by name")
        conn.commit()
        return cursor.fetchall()
    except Exception as ex:
        print(ex)
def get_users_info():
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        cursor.execute("select role.role, name, surname, telegram_id, user.id from user join role on user.role = role.id order by role.role, name")
        conn.commit()
        return cursor.fetchall()
    except Exception as ex:
        print(ex)
def get_teacher(name, surname, t_id, id):
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        cursor.execute("select name, surname, telegram_id, email, tel_no from user where name = ? and surname = ? and telegram_id = ? and id = ?", [name, surname, t_id, id])
        conn.commit()
        return cursor.fetchall()
    except Exception as ex:
        print(ex)
def get_user(id):
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        cursor.execute("select name, surname, telegram_id, tel_no, email from user where id = ?", [id])
        conn.commit()
        return cursor.fetchall()
    except Exception as ex:
        print(ex)
def get_additional_data(message):
    uid = int(message.from_user.id)
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        cursor.execute("select data from tempdata where user_id = ?", [uid])
        conn.commit()
        return cursor.fetchall()[0]
    except Exception as ex:
        print(ex)
def set_additional_data(message, data):
    uid = int(message.from_user.id)
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        cursor.execute("insert into tempdata (user_id, data) values (?, ?)", [uid, data])
        conn.commit()
    except Exception as ex:
        print(ex)
def del_additional_data(message):
    uid = int(message.from_user.id)
    try:
        conn = sqlite3.connect("database.db3")
        cursor = conn.cursor()
        cursor.execute("delete from tempdata where user_id = ?", [uid])
        conn.commit()
    except Exception as ex:
        print(ex)

@bot.message_handler(commands=['start'])
def start_message(message):
    uid =  int(message.from_user.id)
    chat_id = message.chat.id
    username = message.from_user.username
    if username is None:
        username = 'None'
    in_system = bool(execute_query("select count(*) from user where id = ?", [uid])[0][0])
    if (not in_system):
        status_id = execute_query("select id from state where status = 'Not registered'")[0][0]
        role = execute_query("select id from role where role = 'NRG'")[0][0]
        execute_query('insert into user (id, role, chat_id, status_id, telegram_id) values (?, ?, ?, ?, ?)', [uid, role, chat_id, status_id, username])
        bot.send_message(chat_id, '‚úÖ–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –í–∞—Å –≤ —Å–∏—Å—Ç–µ–º–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—èüòä\n\n' +
                         '‚úÖ–ß—Ç–æ –±—ã –æ–ø—ã—Ç –æ—Ç –∏—Å–ø–æ–ª—å–∑–æ–∞–≤–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π –±—ã–ª –±–æ–ª–µ–µ —É—Å—à–ø–µ–Ω—ã–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –ø—Ä–æ–π—Ç–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\n\n' +
                         '‚úÖ–≠—Ç–æ –∑–∞–π–º—ë—Ç –≤—Å–µ–≥–æ –º–∏–Ω—É—Ç—É‚è≥')
        bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º –≤–∏–¥–µ\n\n'+
                                    '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: –í–ª–∞–¥–∏—Å–ª–∞–≤, –ê–Ω–¥—Ä–µ–π, Artem\n'+
                                    '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: –í–ª–∞–¥1—Å–ª–∞–≤, Andrey2020')
    else:
        bot.send_message(message.chat.id, '–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –≤ —Å–∏—Å—Ç–µ–º—É –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—èüßë‚Äçüéì')

@bot.message_handler(content_types=['text'])
def start_message(message):
    state = get_state(message)
    print('State:', state, "|", datetime.datetime.now(), '| Message:', message.text)
    if state == "Not registered":
        text = message.text
        if re.fullmatch('[A-Za-z–ê-–Ø–∞-—è—ë–Å–á—ó–Ñ—î–Ü—ñ“ê“ë]{2,25}( [A-Za-z–ê-–Ø–∞-—è–µ–Å–Å–á—ó–Ñ—î–Ü—ñ“ê“ë]{2,25})?', text):
            bot.send_message(message.chat.id, '–ò–º—è –∑–∞–ø–∏—Å–∞–Ω–æ! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º –≤–∏–¥–µ\n\n'+
                                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: –°–æ–ª–æ–≤—å—ë–≤, –ö–æ–ª–æ–¥—è–∂–Ω—ã–π, Gadjzhiev\n' +
                                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: –°–æ–ª–æ–≤—å—ë–≤1234, Gorsk1y')
            set_state(message, 'Surname')
            set_name(message, text)
        else:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∏–º–µ–Ω–∏\n'+
                                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: –í–ª–∞–¥–∏—Å–ª–∞–≤, –ê–Ω–¥—Ä–µ–π, Artem\n' +
                                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: –í–ª–∞–¥1—Å–ª–∞–≤, Andrey2020')
    elif state == "Surname":
        text = message.text
        if re.fullmatch('[A-Za-z–ê-–Ø–∞-—è—ë–Å–Å–á—ó–Ñ—î–Ü—ñ“ê“ë]{2,25}( [A-Za-z–ê-–Ø–∞-—è–µ–Å–Å–á—ó–Ñ—î–Ü—ñ“ê“ë]{2,25})?', text):
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            for kaf in execute_query('select depart_name from depart order by depart_name'):
                markup.row(kaf[0])
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ñ–µ–¥—Ä—É –∑–∞ –∫–æ—Ç–æ—Ä–æ–π –≤—ã –∑–∞–∫—Ä–µ–ø–ª–µ–Ω—ã\n' +
                             '‚úÖ–ü—Ä–∏–º–µ—Ä: –°–¢, –ü–ò, –ò–£–°\n' +
                             '‚ö†–≠—Ç–æ—Ç —à–∞–≥ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π', reply_markup=markup)
            set_state(message, 'kaf')
            set_surname(message, text)
        else:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ —Ñ–∞–º–∏–ª–∏–∏\n' +
                                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: –°–æ–ª–æ–≤—å—ë–≤, –ö–æ–ª–æ–¥—è–∂–Ω—ã–π, Gadjzhiev\n' +
                                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: –°–æ–ª–æ–≤—å—ë–≤1234, Gorsk1y')
    elif state == 'kaf':
        text = message.text
        if text.upper() in [item[0].upper() for item in execute_query("select depart_name from depart")]:
            depart_id = execute_query('select id from depart where depart_name = ?', [text])[0][0]
            execute_query("update user set depart_id = ? where id = ?", [depart_id, int(message.from_user.id)])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            for group in execute_query('select name from group_table order by name'):
                markup.row(group[0])
            bot.send_message(message.chat.id,
                             '‚úÖ–ö–∞—Ñ–µ–¥—Ä–∞ –∑–∞–ø–∏—Å–∞–Ω–∞\n‚Ñπ–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –≥—Ä—É–ø–ø—É. –ï—Å–ª–∏ –≤—ã —É—á–∏—Ç–µ–ª—å - –≤—ã–±–µ—Ä–∏—Ç–µ –ª—é–±—É—é –≥—Ä—É–ø–ø—É –∏–∑ —Å–ø–∏—Å–∫–∞.\n' +
                             '‚ö†–≠—Ç–æ—Ç —à–∞–≥ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π', reply_markup=markup)
            set_state(message, 'group')
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            for kaf in execute_query('select depart_name from depart order by depart_name'):
                markup.row(kaf[0])
            bot.send_message(message.chat.id,
                             '‚ö†–¢–∞–∫–æ–π –∫–∞—Ñ–µ–¥—Ä—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –µ—ë –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ\n' +
                             '‚úÖ–ü—Ä–∏–º–µ—Ä: –°–¢, –ü–ò, –ò–£–°\n' +
                             '‚ö†–≠—Ç–æ—Ç —à–∞–≥ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π', reply_markup=markup)
    elif state == 'group':
        text = message.text
        if text.upper() in [item[0].upper() for item in execute_query("select name from group_table")]:
            names = [(item[0], item[1].upper()) for item in execute_query("select id, name from group_table")]
            group = None
            for i in names:
                if i[1] == text.upper():
                    group = i[0]
                    break
            execute_query("update user set group_id = ? where id = ?", [group, int(message.from_user.id)])
            markup = types.ReplyKeyboardRemove()
            bot.send_message(message.chat.id, '–ì—Ä—É–ø–ø–∞ –∑–∞–ø–∏—Å–∞–Ω–∞! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º —Å–≤–æ–π –Ω–æ–º–µ—Ä\n\n' +
                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: +380506213214\n' +
                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: 132211–∞—Ñ21–∫—Ñ\n' +
                             '–î–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —à–∞–≥–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "-"', reply_markup=markup)
            set_state(message, 'Number')
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            for group in execute_query('select name from group_table order by name'):
                markup.row(group[0])
            bot.send_message(message.chat.id,
                             '‚ùå–¢–∞–∫–æ–π –≥—Ä—É–ø–ø—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –≥—Ä—É–ø–ø—É –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ—ë –≤ —á–∞—Ç.\n' +
                             '‚ö†–≠—Ç–æ—Ç —à–∞–≥ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π', reply_markup=markup)
    elif state == "Number":
        text = message.text
        rule = re.compile(r'^(?:\+?380)\d{9,13}$')
        if text == '-':
            set_number(message, '+380XXXXXXXXX')
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º —Å–≤–æ—é –ø–æ—á—Ç—É. –ü–æ—á—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞! ‚ö†\n\n' +
                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: slavik.gorskiy@nure.ua\n' +
                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: 132211–∞—Ñ21–∫—Ñ.ua\n')
            set_state(message, 'Email')
        elif rule.search(text):
            bot.send_message(message.chat.id, '–ù–æ–º–µ—Ä –∑–∞–ø–∏—Å–∞–Ω. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º —Å–≤–æ—é –ø–æ—á—Ç—É. \n–ü–æ—á—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞! ‚ö†\n\n' +
                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: slavik.gorskiy@nure.ua\n' +
                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: 132211–∞—Ñ21–∫—Ñ.ua\n')
            set_state(message, 'Email')
            set_number(message, text)
        else:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –Ω–æ–º–µ—Ä–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n' +
                                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: +380506213214\n' +
                                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: 132211–∞—Ñ21–∫—Ñ\n' +
                                            '–î–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —à–∞–≥–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "-"')
    elif state == "Email":
        text = message.text
        try:
            valid = validate_email(text)
            email = valid.email
            bot.send_message(message.chat.id, '–í—ã –ø—Ä–æ—à–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"')
            if int(message.from_user.id) == 386150219:
                set_role(message, 'Admin')
            else:
                    set_role(message, 'Student')
            set_state(message, 'Chill')
            set_email(message, email)
        except EmailNotValidError as e:
            print(e)
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –ø–æ—á—Ç–µ\n' +
                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: slavik.gorskiy@nure.ua\n' +
                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: 132211–∞—Ñ21–∫—Ñ.ua\n')
    elif state == 'add_teacher_reply':
        if message.text == "-":
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'Chill')
        else:
            if message.forward_from is None:
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("-")
                bot.send_message(message.chat.id,
                                 '‚ö†Ô∏è–ü–µ—Ä–µ—à–ª–∏—Ç–µ –û–î–ù–û —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º. –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–æ–±–∞–ª–≤–µ–Ω–∏—è.', reply_markup = markup)
            else:
                if message.forward_from is not None and in_system(message.forward_from.id):
                    if message.forward_from.id != message.chat.id:
                        if not is_teacher(message.forward_from.id) and get_role_by_id(message.forward_from.id) != 'Admin':
                            set_role_by_id(message.forward_from.id, 'Teacher')
                            bot.send_message(message.chat.id, "‚úÖ" + message.forward_from.first_name + " –Ω–∞–∑–Ω–∞—á–µ–Ω(–∞) –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º\n"
                                                                                                      "–ï—Å–ª–∏ –≤—ã —É–≤–∏–¥–µ–ª–∏ —á—Ç–æ-—Ç–æ, –∫—Ä–æ–º–µ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è - –Ω–µ –±–µ—Å–ø–æ–∫–æ–π—Ç–µ—Å—å, –ø—Ä–∏—á–∏–Ω–æ–π —ç—Ç–æ–≥–æ —Å—Ç–∞–ª–æ –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.")
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                            markup.row("-")
                            bot.send_message(message.chat.id,
                                             '–ü–µ—Ä–µ—à–ª–∏—Ç–µ –û–î–ù–û —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º.\n‚ö†Ô∏è–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–æ–±–∞–ª–≤–µ–Ω–∏—è.', reply_markup = markup)
                            set_state(message, 'add_teacher_reply')
                        else:
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                            markup.row("-")
                            bot.send_message(message.chat.id, "‚ùå–î–∞–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞. –ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø—Ä–æ–ø–∏—à–∏—Ç–µ –æ—Ç—Ä–∞–≤—å—Ç–µ '-'", reply_markup = markup)
                    else:
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                        markup.row("-")
                        bot.send_message(message.chat.id, "‚ùå–í—ã –ø–µ—Ä–µ—Å–ª–∞–ª–∏ —Å–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ. –ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø—Ä–æ–ø–∏—à–∏—Ç–µ –æ—Ç—Ä–∞–≤—å—Ç–µ '-'", reply_markup = markup)
                elif message.forward_from is not None and not in_system(message.forward_from.id):
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("-")
                    bot.send_message(message.chat.id, "‚ùå–î–∞–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –Ω–µ –∏–º–µ–µ—Ç —á–∞—Ç–∞ —Å–æ –º–Ω–æ–π. –ú—ã –Ω–µ –º–æ–∂–µ–º –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å. –ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø—Ä–æ–ø–∏—à–∏—Ç–µ –æ—Ç—Ä–∞–≤—å—Ç–µ '-'", reply_markup = markup)
    elif state == 'show_teacher_list':
        text = message.text
        text = text.split(' ')
        if text[0] == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'Chill')
        elif len(text) == 4:
            text[2] = text[2][1:]
            if len(text[3]) > 2:
                try:
                    text[3] = int(text[3][1:len(text[3])-1])
                    text = tuple(text)
                    if text in get_teachers_info():
                        data = get_teacher(*text)
                        msg = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é\n" \
                              "‚úÖ–ò–º—è: {}\n" \
                              "‚úÖ–§–∞–º–∏–ª–∏—è: {}\n" \
                              "‚úÖ–ê–∫–∫–∞—É–Ω—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º: @{}\n" \
                              "‚úÖ–ü–æ—á—Ç–∞: {}\n" \
                              "‚úÖ–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {}".format(*data[0])
                        bot.send_message(message.chat.id, msg)
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                        markup.row("-")
                        for name, surname, t_id, chat_id in get_teachers_info():
                            markup.row("{} {} @{} ({})".format(name, surname, t_id, chat_id))
                        bot.send_message(message.chat.id,
                                         '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                                         '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                         reply_markup=markup)
                        set_state(message, 'show_teacher_list')
                    else:
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                        markup.row("-")
                        for name, surname, t_id, chat_id in get_teachers_info():
                            markup.row("{} {} @{} ({})".format(name, surname, t_id, chat_id))
                        bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.")
                        bot.send_message(message.chat.id,
                                         '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                                         '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                         reply_markup=markup)
                except Exception as ex:
                    print(ex)
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("-")
                    for name, surname, t_id, chat_id in get_teachers_info():
                        markup.row("{} {} @{} ({})".format(name, surname, t_id, chat_id))
                    bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.")
                    bot.send_message(message.chat.id,
                                     '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                                     '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                     reply_markup=markup)
            else:
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("-")
                for name, surname, t_id, chat_id in get_teachers_info():
                    markup.row("{} {} @{} ({})".format(name, surname, t_id, chat_id))
                bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.")
                bot.send_message(message.chat.id,
                                 '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                                 '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                 reply_markup=markup)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for name, surname, t_id, chat_id in get_teachers_info():
                markup.row("{} {} @{} ({})".format(name, surname, t_id, chat_id))
            bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.")
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n'+
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
            reply_markup = markup)
    elif state == 'change_user_start':
        text = message.text
        text = text.split(' ')
        if text[0] == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'Chill')
        elif len(text) == 6:
            text[4] = text[4][1:]
            if len(text[5]) > 2:
                try:
                    text[5] = int(text[5][1:len(text[5]) - 1])
                    del text[1]
                    text = tuple(text)
                    if text in get_users_info() and text[0] != 'NRG':
                        set_state(message, 'change_user_answer')
                        set_additional_data(message, text[4])
                        data = get_user(text[4])
                        msg = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n" \
                              "‚úÖ–ò–º—è: {}\n" \
                              "‚úÖ–§–∞–º–∏–ª–∏—è: {}\n" \
                              "‚úÖ–ê–∫–∫–∞—É–Ω—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º: @{}\n" \
                              "‚úÖ–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {}\n" \
                              "‚úÖ–ü–æ—á—Ç–∞: {}".format(*data[0])
                        bot.send_message(message.chat.id, msg)
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                        markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
                        markup.row("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞")
                        markup.row("-")
                        bot.send_message(message.chat.id, '–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å? –ù–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n' +
                                                          '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
                    else:
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                        markup.row("-")
                        for role, name, surname, t_id, chat_id in get_users_info():
                            if role != 'NRG':
                                markup.row("{} | {} {} @{} ({})".format(role, name, surname, t_id, chat_id))
                        bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
                        bot.send_message(message.chat.id,
                                         '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                                         '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                         reply_markup=markup)
                except Exception as ex:
                    print(ex)
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("-")
                    for role, name, surname, t_id, chat_id in get_users_info():
                        if role != 'NRG':
                            markup.row("{} | {} {} @{} ({})".format(role, name, surname, t_id, chat_id))
                    bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
                    bot.send_message(message.chat.id,
                                     '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                                     '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                     reply_markup=markup)
            else:
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("-")
                for role, name, surname, t_id, chat_id in get_users_info():
                    markup.row("{} | {} {} @{} ({})".format(role, name, surname, t_id, chat_id))
                bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
                bot.send_message(message.chat.id,
                                 '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                                 '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                 reply_markup=markup)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for role, name, surname, t_id, chat_id in get_users_info():
                markup.row("{} | {} {} @{} ({})".format(role, name, surname, t_id, chat_id))
            bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
    elif state == 'change_user_answer':
        if message.text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            del_additional_data(message)
            set_state(message, 'change_user_start')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for role, name, surname, t_id, chat_id in get_users_info():
                if role != 'NRG':
                    markup.row("{} | {} {} @{} ({})".format(role, name, surname, t_id, chat_id))
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
        elif (message.text).upper() == '–ò–ú–Ø':
            set_state(message, 'change_user_name')
            data = execute_query('select name from user where id = ?', [get_additional_data(message)[0]])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–°—Ç–∞—Ä–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}\n".format(data)+
                             "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif (message.text).upper()  == '–§–ê–ú–ò–õ–ò–Ø':
            set_state(message, 'change_user_surname')
            data = execute_query('select surname from user where id = ?', [get_additional_data(message)[0]])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–°—Ç–∞—Ä–∞—è —Ñ–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}\n".format(data)+
                             "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ñ–∞–º–∏–ª–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif (message.text).upper()  == '@ID':
            set_state(message, 'change_user_telegram')
            data = execute_query('select telegram_id from user where id = ?', [get_additional_data(message)[0]])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–°—Ç–∞—Ä–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{}\n".format(data)+
                             "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif (message.text).upper()  == '–ù–û–ú–ï–† –¢–ï–õ–ï–§–û–ù–ê':
            set_state(message, 'change_user_telno')
            data = execute_query('select tel_no from user where id = ?', [get_additional_data(message)[0]])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–°—Ç–∞—Ä—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}\n".format(data)+
                             "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif (message.text).upper()  == '–≠–õ–ï–ö–¢–†–û–ù–ù–ê–Ø –ü–û–ß–¢–ê':
            set_state(message, 'change_user_email')
            data = execute_query('select email from user where id = ?', [get_additional_data(message)[0]])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–°—Ç–∞—Ä–∞—è –ø–æ—á—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}\n".format(data)+
                             "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –ø–æ—á—Ç—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä! –ù–∞–ø–∏—à–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ —á–∞—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
    elif state == 'change_user_name':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'change_user_answer')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å? –ù–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif re.fullmatch('[A-Za-z–ê-–Ø–∞-—è—ë–Å–Å–á—ó–Ñ—î–Ü—ñ“ê“ë]{2,25}( [A-Za-z–ê-–Ø–∞-—è–µ–Å–Å–á—ó–Ñ—î–Ü—ñ“ê“ë]{2,25})?', text):
            id = int(get_additional_data(message)[0])
            execute_query("update user set name = ? where id = ?", [text, id])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚úÖ–ò–º—è –∑–∞–ø–∏—Å–∞–Ω–æ! –ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –í—ã —Ö–æ—Ç–∏—Ç–µ –µ—â—ë –ø–æ–º–µ–Ω—è—Ç—å?\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            set_state(message, 'change_user_answer')
        else:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∏–º–µ–Ω–∏\n' +
                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: –í–ª–∞–¥–∏—Å–ª–∞–≤, –ê–Ω–¥—Ä–µ–π, Artem\n' +
                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: –í–ª–∞–¥1—Å–ª–∞–≤, Andrey2020')
    elif state == 'change_user_surname':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'change_user_answer')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å? –ù–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif re.fullmatch('[A-Za-z–ê-–Ø–∞-—è—ë–Å–Å–á—ó–Ñ—î–Ü—ñ“ê“ë]{2,25}( [A-Za-z–ê-–Ø–∞-—è–µ–Å–Å–á—ó–Ñ—î–Ü—ñ“ê“ë]{2,25})?', text):
            id = int(get_additional_data(message)[0])
            execute_query("update user set surname = ? where id = ?", [text, id])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚úÖ–§–∞–º–∏–ª–∏—è –∑–∞–ø–∏—Å–∞–Ω–∞! –ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –í—ã —Ö–æ—Ç–∏—Ç–µ –µ—â—ë –ø–æ–º–µ–Ω—è—Ç—å?\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            set_state(message, 'change_user_answer')
        else:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ —Ñ–∞–º–∏–ª–∏–∏\n' +
                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: –°–æ–ª–æ–≤—å—ë–≤, –ö–æ–ª–æ–¥—è–∂–Ω—ã–π, Gadjzhiev\n' +
                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: –°–æ–ª–æ–≤—å—ë–≤1234, Gorsk1y')
    elif state == 'change_user_telegram':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'change_user_answer')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å? –ù–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif len(text.split(' ')) == 1 and text[0] == '@' and re.fullmatch('[A-Za-z0-9_]{2,25}?', text[1:]) and len(text) >= 6:
            id = int(get_additional_data(message)[0])
            execute_query("update user set telegram_id = ? where id = ?", [text[1:], id])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚úÖ–°—Å—ã–ª–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞! –ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –í—ã —Ö–æ—Ç–∏—Ç–µ –µ—â—ë –ø–æ–º–µ–Ω—è—Ç—å?\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            set_state(message, 'change_user_answer')
        else:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏\n' +
                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: @the_fenrir, @nure_ua, @darude\n' +
                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: link231, https')
    elif state == 'change_user_telno':
        text = message.text
        rule = re.compile(r'^(?:\+?380)\d{9,13}$')
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'change_user_answer')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å? –ù–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif rule.search(text):
            id = int(get_additional_data(message)[0])
            execute_query("update user set tel_no = ? where id = ?", [text, id])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚úÖ–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∑–∞–ø–∏—Å–∞–Ω! –ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –í—ã —Ö–æ—Ç–∏—Ç–µ –µ—â—ë –ø–æ–º–µ–Ω—è—Ç—å?\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            set_state(message, 'change_user_answer')
        else:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –Ω–æ–º–µ—Ä–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n' +
                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: +380506213214\n' +
                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: 132211–∞—Ñ21–∫—Ñ\n' +
                             '–î–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —à–∞–≥–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "-"')
    elif state == 'change_user_email':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'change_user_answer')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å? –ù–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        else:
            try:
                valid = validate_email(text)
                email = valid.email
                id = int(get_additional_data(message)[0])
                execute_query("update user set email = ? where id = ?", [email, id])
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
                markup.row("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞")
                markup.row("-")
                bot.send_message(message.chat.id,
                                 '‚úÖ–ü–æ—á—Ç–∞ –∑–∞–ø–∏—Å–∞–Ω–∞! –ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –í—ã —Ö–æ—Ç–∏—Ç–µ –µ—â—ë –ø–æ–º–µ–Ω—è—Ç—å?\n' +
                                 '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
                set_state(message, 'change_user_answer')
            except EmailNotValidError as e:
                print(e)
                bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –ø–æ—á—Ç–µ\n' +
                                 '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: slavik.gorskiy@nure.ua\n' +
                                 '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: 132211–∞—Ñ21–∫—Ñ.ua\n')
    elif state == 'edit_myself':
        text = message.text
        if text == "-":
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'Chill')
        elif text.upper() == "–ò–ú–Ø":
            data = execute_query('select name from user where id = ?', [int(message.from_user.id)])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–í–∞—à–µ —Å—Ç–∞—Ä–æ–µ –∏–º—è: {}\n".format(data) +
                             "–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –Ω–æ–≤–æ–µ –∏–º—è\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            set_state(message, 'change_self_name')
        elif text.upper() == "–§–ê–ú–ò–õ–ò–Ø":
            data = execute_query('select surname from user where id = ?', [int(message.from_user.id)])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–í–∞—à–∞ —Å—Ç–∞—Ä–∞—è —Ñ–∞–º–∏–ª–∏—è: {}\n".format(data) +
                             "–í–≤–µ–¥–∏—Ç–µ –í–∞—à—É –Ω–æ–≤—É—é —Ñ–∞–º–∏–ª–∏—é\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            set_state(message, 'change_self_surname')
        elif text.upper() == "@ID":
            data = execute_query('select telegram_id from user where id = ?', [int(message.from_user.id)])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–í–∞—à–∞ —Å—Ç–∞—Ä–∞—è —Å—Å—ã–ª–∫–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º: @{}\n".format(data) +
                             "–í–≤–µ–¥–∏—Ç–µ –í–∞—à—É –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            set_state(message, 'change_self_link')
        elif text.upper() == 'EMAIL':
            data = execute_query('select email from user where id = ?', [int(message.from_user.id)])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–í–∞—à–∞ —Å—Ç–∞—Ä–∞—è –ø–æ—á—Ç–∞: {}\n".format(data) +
                             "–í–≤–µ–¥–∏—Ç–µ –í–∞—à—É –Ω–æ–≤—É—é –ø–æ—á—Ç—É\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            set_state(message, 'change_self_email')
        elif text.upper() == '–ù–û–ú–ï–† –¢–ï–õ–ï–§–û–ù–ê':
            data = execute_query('select tel_no from user where id = ?', [int(message.from_user.id)])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–í–∞—à–∞ —Å—Ç–∞—Ä—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {}\n".format(data) +
                             "–í–≤–µ–¥–∏—Ç–µ –í–∞—à –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            set_state(message, 'change_self_telno')
        elif text.upper() == '–ö–ê–§–ï–î–†–ê':
            data = execute_query('select depart_name from user join depart on depart_id = depart.id where user.id = ?', [int(message.from_user.id)])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for kaf in execute_query('select depart_name from depart order by depart_name'):
                markup.row(kaf[0])
            bot.send_message(message.chat.id, "‚Ñπ–í–∞—à–∞ —Å—Ç–∞—Ä–∞—è –∫–∞—Ñ–µ–¥—Ä–∞: {}\n".format(data) +
                             "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ñ–µ–¥—Ä—ã –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –µ—ë –∏–∑ —Å–ø–∏—Å–∫–∞\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            set_state(message, 'change_self_kaf')
        elif text.upper() == '–ì–†–£–ü–ü–ê':
            data = execute_query('select group_table.name from user join group_table on group_id = group_table.id where user.id = ?', [int(message.from_user.id)])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for group in execute_query('select name from group_table order by name'):
                markup.row(group[0])
            bot.send_message(message.chat.id, "‚Ñπ–í–∞—à–∞ —Å—Ç–∞—Ä–∞—è –≥—Ä—É–ø–ø–∞: {}\n".format(data) +
                             "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –≥—Ä—É–ø–ø–∫ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –µ—ë –∏–∑ —Å–ø–∏—Å–∫–∞\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            set_state(message, 'change_self_group')
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("Email", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ö–∞—Ñ–µ–¥—Ä–∞")
            markup.row("–ì—Ä—É–ø–ø–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä. –í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–æ–±–∞–ª–≤–µ–Ω–∏—è.',
                             reply_markup=markup)
    elif state == 'change_self_name':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("Email", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ö–∞—Ñ–µ–¥—Ä–∞")
            markup.row("–ì—Ä—É–ø–ø–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í—ã –µ—â—ë —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–æ–±–∞–ª–≤–µ–Ω–∏—è.',
                             reply_markup=markup)
            set_state(message, 'edit_myself')
        elif re.fullmatch('[A-Za-z–ê-–Ø–∞-—è—ë–Å–Å–á—ó–Ñ—î–Ü—ñ“ê“ë]{2,25}( [A-Za-z–ê-–Ø–∞-—è–µ–Å–Å–á—ó–Ñ—î–Ü—ñ“ê“ë]{2,25})?', text):
            id = int(message.from_user.id)
            execute_query("update user set name = ? where id = ?", [text, id])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("Email", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ö–∞—Ñ–µ–¥—Ä–∞")
            markup.row("–ì—Ä—É–ø–ø–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚úÖ–ò–º—è –∑–∞–ø–∏—Å–∞–Ω–æ! –ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –í—ã —Ö–æ—Ç–∏—Ç–µ –µ—â—ë –ø–æ–º–µ–Ω—è—Ç—å?\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            set_state(message, 'edit_myself')
        else:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∏–º–µ–Ω–∏\n' +
                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: –í–ª–∞–¥–∏—Å–ª–∞–≤, –ê–Ω–¥—Ä–µ–π, Artem\n' +
                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: –í–ª–∞–¥1—Å–ª–∞–≤, Andrey2020')
    elif state == 'change_self_surname':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("Email", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ö–∞—Ñ–µ–¥—Ä–∞")
            markup.row("–ì—Ä—É–ø–ø–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í—ã –µ—â—ë —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–æ–±–∞–ª–≤–µ–Ω–∏—è.',
                             reply_markup=markup)
            set_state(message, 'edit_myself')
        elif re.fullmatch('[A-Za-z–ê-–Ø–∞-—è—ë–Å–Å–á—ó–Ñ—î–Ü—ñ“ê“ë]{2,25}( [A-Za-z–ê-–Ø–∞-—è–µ–Å–Å–á—ó–Ñ—î–Ü—ñ“ê“ë]{2,25})?', text):
            id = int(message.from_user.id)
            execute_query("update user set surname = ? where id = ?", [text, id])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("Email", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ö–∞—Ñ–µ–¥—Ä–∞")
            markup.row("–ì—Ä—É–ø–ø–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚úÖ–§–∞–º–∏–ª–∏—è –∑–∞–ø–∏—Å–∞–Ω–∞! –ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –í—ã —Ö–æ—Ç–∏—Ç–µ –µ—â—ë –ø–æ–º–µ–Ω—è—Ç—å?\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            set_state(message, 'edit_myself')
        else:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ —Ñ–∞–º–∏–ª–∏–∏\n' +
                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: –°–æ–ª–æ–≤—å—ë–≤, –ö–æ–ª–æ–¥—è–∂–Ω—ã–π, Gadjzhiev\n' +
                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: –°–æ–ª–æ–≤—å—ë–≤1234, Gorsk1y')
    elif state == 'change_self_link':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("Email", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ö–∞—Ñ–µ–¥—Ä–∞")
            markup.row("–ì—Ä—É–ø–ø–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í—ã –µ—â—ë —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–æ–±–∞–ª–≤–µ–Ω–∏—è.',
                             reply_markup=markup)
            set_state(message, 'edit_myself')
        elif len(text.split(' ')) == 1 and text[0] == '@' and re.fullmatch('[A-Za-z0-9_]{2,25}?', text[1:]) and len(text) >= 6:
            id = int(message.from_user.id)
            execute_query("update user set telegram_id = ? where id = ?", [text[1:], id])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("Email", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ö–∞—Ñ–µ–¥—Ä–∞")
            markup.row("–ì—Ä—É–ø–ø–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚úÖ–°—Å—ã–ª–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞! –ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –í—ã —Ö–æ—Ç–∏—Ç–µ –µ—â—ë –ø–æ–º–µ–Ω—è—Ç—å?\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            set_state(message, 'edit_myself')
        else:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏\n' +
                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: @the_fenrir, @nure_ua, @darude\n' +
                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: link231, https')
    elif state == 'change_self_email':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("Email", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ö–∞—Ñ–µ–¥—Ä–∞")
            markup.row("–ì—Ä—É–ø–ø–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í—ã –µ—â—ë —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–æ–±–∞–ª–≤–µ–Ω–∏—è.',
                             reply_markup=markup)
            set_state(message, 'edit_myself')
        else:
            try:
                valid = validate_email(text)
                email = valid.email
                id = int(message.from_user.id)
                execute_query("update user set email = ? where id = ?", [email, id])
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
                markup.row("Email", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ö–∞—Ñ–µ–¥—Ä–∞")
                markup.row("–ì—Ä—É–ø–ø–∞")
                markup.row("-")
                bot.send_message(message.chat.id,
                                 '‚úÖ–ü–æ—á—Ç–∞ –∑–∞–ø–∏—Å–∞–Ω–∞! –ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –í—ã —Ö–æ—Ç–∏—Ç–µ –µ—â—ë –ø–æ–º–µ–Ω—è—Ç—å?\n' +
                                 '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
                set_state(message, 'edit_myself')
            except EmailNotValidError as e:
                print(e)
                bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –ø–æ—á—Ç–µ\n' +
                                 '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: slavik.gorskiy@nure.ua\n' +
                                 '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: 132211–∞—Ñ21–∫—Ñ.ua\n')
    elif state == 'change_self_telno':
        text = message.text
        rule = re.compile(r'^(?:\+?380)\d{9,13}$')
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("Email", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ö–∞—Ñ–µ–¥—Ä–∞")
            markup.row("–ì—Ä—É–ø–ø–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í—ã –µ—â—ë —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–æ–±–∞–ª–≤–µ–Ω–∏—è.',
                             reply_markup=markup)
            set_state(message, 'edit_myself')
        elif rule.search(text):
            id = int(message.from_user.id)
            execute_query("update user set tel_no = ? where id = ?", [text, id])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("Email", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ö–∞—Ñ–µ–¥—Ä–∞")
            markup.row("–ì—Ä—É–ø–ø–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚úÖ–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∑–∞–ø–∏—Å–∞–Ω! –ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –í—ã —Ö–æ—Ç–∏—Ç–µ –µ—â—ë –ø–æ–º–µ–Ω—è—Ç—å?\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            set_state(message, 'edit_myself')
        else:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –Ω–æ–º–µ—Ä–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n' +
                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: +380506213214\n' +
                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: 132211–∞—Ñ21–∫—Ñ\n' +
                             '–î–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —à–∞–≥–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "-"')
    elif state == 'change_self_kaf':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("Email", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ö–∞—Ñ–µ–¥—Ä–∞")
            markup.row("–ì—Ä—É–ø–ø–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í—ã –µ—â—ë —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –≤—ã—Ö–æ–¥–∞.',
                             reply_markup=markup)
            set_state(message, 'edit_myself')
        elif text.upper() in [item[0].upper() for item in execute_query("select depart_name from depart")]:
            depart_id = execute_query('select id from depart where depart_name = ?', [text])[0][0]
            execute_query("update user set depart_id = ? where id = ?", [depart_id, int(message.from_user.id)])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("Email", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ö–∞—Ñ–µ–¥—Ä–∞")
            markup.row("–ì—Ä—É–ø–ø–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚úÖ–ö–∞—Ñ–µ–¥—Ä–∞ –∑–∞–ø–∏—Å–∞–Ω–∞\n–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í—ã –µ—â—ë —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –≤—ã—Ö–æ–¥–∞.', reply_markup=markup)
            set_state(message, 'edit_myself')
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            for kaf in execute_query('select depart_name from depart order by depart_name'):
                markup.row(kaf[0])
            bot.send_message(message.chat.id,
                             '‚ö†–¢–∞–∫–æ–π –∫–∞—Ñ–µ–¥—Ä—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –µ—ë –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ\n' +
                             '‚úÖ–ü—Ä–∏–º–µ—Ä: –°–¢, –ü–ò, –ò–£–°\n' +
                             '–î–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —à–∞–≥–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "-"', reply_markup=markup)
    elif state == 'change_self_group':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("Email", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ö–∞—Ñ–µ–¥—Ä–∞")
            markup.row("–ì—Ä—É–ø–ø–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í—ã –µ—â—ë —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –≤—ã—Ö–æ–¥–∞.',
                             reply_markup=markup)
            set_state(message, 'edit_myself')
        elif text.upper() in [item[0].upper() for item in execute_query("select name from group_table")]:
            names = [(item[0], item[1].upper()) for item in execute_query("select id, name from group_table")]
            group = None
            for i in names:
                if i[1] == text.upper():
                    group = i[0]
                    break
            execute_query("update user set group_id = ? where id = ?", [group, int(message.from_user.id)])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("Email", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ö–∞—Ñ–µ–¥—Ä–∞")
            markup.row("–ì—Ä—É–ø–ø–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚úÖ–ì—Ä—É–ø–ø–∞ –∑–∞–ø–∏—Å–∞–Ω–∞\n–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í—ã –µ—â—ë —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –≤—ã—Ö–æ–¥–∞.', reply_markup=markup)
            set_state(message, 'edit_myself')
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            for group in execute_query('select name from group_table order by name'):
                markup.row(group[0])
            bot.send_message(message.chat.id,
                             '‚ùå–¢–∞–∫–æ–π –≥—Ä—É–ø–ø—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –≥—Ä—É–ø–ø—É –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ—ë –≤ —á–∞—Ç.\n' +
                             '–î–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —à–∞–≥–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "-"', reply_markup=markup)
    elif state == 'del_teacher_start':
        text = message.text
        text = text.split(' ')
        if text[0] == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'Chill')
        elif len(text) == 4:
            text[2] = text[2][1:]
            if len(text[3]) > 2:
                try:
                    text[3] = int(text[3][1:len(text[3]) - 1])
                    text = tuple(text)
                    if text in get_teachers_info():
                        data = get_teacher(*text)
                        msg = '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è?\n'
                        msg += "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é\n" \
                              "‚úÖ–ò–º—è: {}\n" \
                              "‚úÖ–§–∞–º–∏–ª–∏—è: {}\n" \
                              "‚úÖ–ê–∫–∫–∞—É–Ω—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º: @{}\n" \
                              "‚úÖ–ü–æ—á—Ç–∞: {}\n" \
                              "‚úÖ–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {}".format(*data[0])
                        bot.send_message(message.chat.id, msg)
                        set_additional_data(message, text[3])
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                        markup.row("–î–∞", "–ù–µ—Ç")
                        set_state(message, 'del_teacher_submit')
                        bot.send_message(message.chat.id, '‚ö†‚ö†‚ö†–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è? (–î–∞/–ù–µ—Ç) ', reply_markup=markup)
                    else:
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                        markup.row("-")
                        for name, surname, t_id, chat_id in get_teachers_info():
                            markup.row("{} {} @{} ({})".format(name, surname, t_id, chat_id))
                        bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.")
                        bot.send_message(message.chat.id,
                                         '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                                         '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                         reply_markup=markup)
                except Exception as ex:
                    print(ex)
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("-")
                    for name, surname, t_id, chat_id in get_teachers_info():
                        markup.row("{} {} @{} ({})".format(name, surname, t_id, chat_id))
                    bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.")
                    bot.send_message(message.chat.id,
                                     '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                                     '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                     reply_markup=markup)
            else:
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("-")
                for name, surname, t_id, chat_id in get_teachers_info():
                    markup.row("{} {} @{} ({})".format(name, surname, t_id, chat_id))
                bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.")
                bot.send_message(message.chat.id,
                                 '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                                 '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                 reply_markup=markup)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for name, surname, t_id, chat_id in get_teachers_info():
                markup.row("{} {} @{} ({})".format(name, surname, t_id, chat_id))
            bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.")
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
    elif state == 'del_teacher_submit':
        text = message.text
        if text.upper() == "–î–ê":
            id = int(get_additional_data(message)[0])
            set_role_by_id(id, 'Student')
            bot.send_message(message.chat.id, '‚úÖ–í—ã –≤—ã–±—Ä–∞–ª–∏ "–¥–∞", –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω, —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ–≥–æ-—Ç–æ –µ—â—ë?')
            set_state(message, 'del_teacher_start')
            del_additional_data(message)
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for name, surname, t_id, chat_id in get_teachers_info():
                markup.row("{} {} @{} ({})".format(name, surname, t_id, chat_id))
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
        elif text.upper() == "–ù–ï–¢":
            bot.send_message(message.chat.id, '‚úÖ–í—ã –≤—ã–±—Ä–∞–ª–∏ "–Ω–µ—Ç", —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ–≥–æ-—Ç–æ –¥—Ä—É–≥–æ–≥–æ?')
            set_state(message, 'del_teacher_start')
            del_additional_data(message)
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for name, surname, t_id, chat_id in get_teachers_info():
                markup.row("{} {} @{} ({})".format(name, surname, t_id, chat_id))
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–î–∞", "–ù–µ—Ç")
            set_state(message, 'del_teacher_submit')
            bot.send_message(message.chat.id, '‚ö†‚ö†‚ö†–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è? (–î–∞/–ù–µ—Ç) ',
                             reply_markup=markup)
    elif state == 'add_course_name':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'Chill')
        elif all([re.fullmatch('[A-Za-z–ê-–Ø–∞-—è—ë–Å–á—ó–Ñ—î–Ü—ñ“ê“ë]{1,25}', i) for i in text.split(' ')]) and text != '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ':
            id = str(datetime.datetime.now())
            id = id.split(' ')
            id = '_'.join(id)
            execute_query('insert into course(id, name) values (?, ?)', [id, text])
            set_additional_data(message, id)
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            for group in execute_query('select name from group_table order by name'):
                markup.row(group[0])
            bot.send_message(message.chat.id,
                             '‚úÖ–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞ –∑–∞–ø–∏—Å–∞–Ω–æ!\n‚Ñπ–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫—É—Ä—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ—ë –≤ —á–∞—Ç.\n' +
                             '‚ö†–≠—Ç–æ—Ç —à–∞–≥ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π', reply_markup=markup)
            depart_id = execute_query('select depart_id from user where id = ?', [message.from_user.id])[0][0]
            execute_query('update course set depart_id = ? where id = ?', [depart_id, get_additional_data(message)[0]])
            set_state(message, 'add_course_groups')
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, '–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∫—É—Ä—Å–∞ (–∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã &%$#)\n' +
                             '‚úÖ–ü—Ä–∏–º–µ—Ä: –ú–µ—Ç–æ–¥—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π\n' +
                             '‚úÖ–ü—Ä–∏–º–µ—Ä: –î–∏—Å–∫—Ä–µ—Ç–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
    elif state == 'add_course_groups':
        text = message.text
        if text == '+':
            groups = execute_query('select count(*) from course_group where course_id = ?', [get_additional_data(message)][0])[0][0]
            if groups == 0:
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                for group in execute_query('select name from group_table order by name'):
                    markup.row(group[0])
                bot.send_message(message.chat.id,
                                 '‚ùå–í—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø—ã. –í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ—ë –≤ —á–∞—Ç.\n' +
                                 '‚ö†–≠—Ç–æ—Ç —à–∞–≥ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π', reply_markup=markup)
            else:
                markup = types.ReplyKeyboardRemove()
                bot.send_message(message.chat.id,
                                 '‚úÖ–ì—Ä—É–ø–ø—ã –∑–∞–ø–∏—Å–∞–Ω—ã\n‚Ñπ–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è –∫—É—Ä—Å–∞ (1 —á–∏—Å–ª–æ)\n' +
                                 '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: 4\n' +
                                 '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: –∞—Ñ\n' +
                                 '‚ö†–≠—Ç–æ—Ç —à–∞–≥ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π', reply_markup=markup)
                set_state(message, 'add_course_credits')
        elif text.upper() in [item[0].upper() for item in execute_query("select name from group_table")]:
            names = [(item[0], item[1].upper()) for item in execute_query("select id, name from group_table")]
            group = None
            for i in names:
                if i[1] == text.upper():
                    group = i[0]
                    break
            if (group, ) not in execute_query('select group_id from course_group where course_id = ?', [get_additional_data(message)[0]]):
                execute_query('insert into course_group(course_id, group_id) values (?, ?)', [get_additional_data(message)[0], group])
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("+")
                for group in execute_query('select name from group_table order by name'):
                    markup.row(group[0])
                bot.send_message(message.chat.id,
                                 '‚úÖ–ì—Ä—É–ø–ø–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞. \n'+
                                 '‚Ñπ–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–Ω—É –≥—Ä—É–ø–ø—É, –≤—ã–±–µ—Ä–∏—Ç–µ –µ—ë –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç.\n'+
                                 '‚ö†–ï—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–∏ –≤—Å–µ –≥—Ä—É–ø–ø—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "+"', reply_markup=markup)
            else:
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("+")
                for group in execute_query('select name from group_table order by name'):
                    markup.row(group[0])
                bot.send_message(message.chat.id,
                                 '‚ùå–ì—Ä—É–ø–ø–∞ —É–∂–µ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞. \n' +
                                 '‚Ñπ–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥—É—é –≥—Ä—É–ø–ø—É, –≤—ã–±–µ—Ä–∏—Ç–µ –µ—ë –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç.\n' +
                                 '‚ö†–ï—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–∏ –≤—Å–µ –≥—Ä—É–ø–ø—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "+"', reply_markup=markup)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("+")
            for group in execute_query('select name from group_table order by name'):
                markup.row(group[0])
            bot.send_message(message.chat.id,
                             '‚ùå–¢–∞–∫–æ–π –≥—Ä—É–ø–ø—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫—É—Ä—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ—ë –≤ —á–∞—Ç.\n' +
                             '‚ö†–≠—Ç–æ—Ç —à–∞–≥ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π', reply_markup=markup)
    elif state == 'add_course_credits':
        text = message.text
        check = True
        data = None
        if len(text.split(' ')) != 1:
            check = False
        if check is not False:
            try:
                data = int(text)
            except Exception:
                data = None
                check = False
        if data is not None:
            check = data >= 0
        if check and text != '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ':
            execute_query('update course set practical_n = ?, labs_n = ?, lections_n = ?, credits = ? where id = ?', [0, 0, 0, data, get_additional_data(message)[0]])
            bot.send_message(message.chat.id, '‚úÖ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞–ø–∏—Å–∞–Ω–∞. –û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞ (–¥–ª–∏–Ω–Ω–∞ –Ω–µ –±–æ–ª–µ–µ 2000 —Å–∏–º–≤–æ–ª–æ–≤)\n' +
                             '‚ö†–≠—Ç–æ—Ç —à–∞–≥ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π')
            set_state(message, 'add_course_description')
        else:
            bot.send_message(message.chat.id,
                             '‚ö†–í—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É. –í–≤–µ–¥–∏—Ç–µ –æ–¥–Ω–æ —á–∏—Å–ª–æ (–∫–æ–ª-–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤)\n' +
                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ:  4\n' +
                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: -18 –∞—Ñ')
    elif state == 'add_course_description':
        text = message.text
        if len(text) > 2000:
            bot.send_message(message.chat.id, '‚ùå–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ, –æ–ø–∏—à–∏—Ç–µ –∫—É—Ä—Å –Ω–µ–º–Ω–æ–≥–æ –∫–æ—Ä–æ—á–µ (–¥–æ 2000 —Å–∏–º–≤–æ–ª–æ–≤)')
        elif text != '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ':
            execute_query('update course set description = ? where id = ?', [text, get_additional_data(message)[0]])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            data_set = execute_query('select name, depart_name, practical_n, lections_n, labs_n, credits, description from course join depart on course.depart_id = depart.id where course.id = ?', [get_additional_data(message)[0]])[0]
            groups = [item[0] for item in execute_query('select name from group_table join course_group on group_table.id = course_group.group_id where course_id = ?', [get_additional_data(message)[0]])]
            del_additional_data(message)
            bot.send_message(message.chat.id, '‚Ñπ–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n' \
                                              '‚Ñπ–ö–∞—Ñ–µ–¥—Ä–∞ –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–ø–æ–¥–∞—ë—Ç –∫—É—Ä—Å: {}\n' \
                                              '‚Ñπ–ö–æ–ª-–≤–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                              '‚Ñπ–ö–æ–ª-–≤–æ –ª–µ–∫—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                              '‚Ñπ–ö–æ–ª-–≤–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                              '‚Ñπ–ö–æ–ª-–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –∫—É—Ä—Å–∞: {}\n'.format(*data_set[:6]) +
                             '‚Ñπ–ì—Ä—É–ø–ø—ã –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–µ –∫ –∫—É—Ä—Å—É: ' + ', '.join(
                groups) + '\n' + '‚Ñπ–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n'.format(data_set[6]), reply_markup=markup)
            bot.send_message(message.chat.id, '–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –∫—É—Ä—Å? –¢–æ–≥–¥–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–µ\n' +
                             '‚úÖ–ü—Ä–∏–º–µ—Ä: –ú–µ—Ç–æ–¥—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π\n' +
                             '‚úÖ–ü—Ä–∏–º–µ—Ä: –î–∏—Å–∫—Ä–µ—Ç–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            set_state(message, 'add_course_name')
        else:
            bot.send_message(message.chat.id,
                             '‚ùå–ó–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ')
    elif state == 'watch_course_choise':
        text = message.text
        text = text.split(' ')
        if text[0] == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'Chill')
        else:
            try:
                text[0] = text[0][1:len(text[0]) - 1]
                if text[0] == execute_query('select id from course where id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [text[0]])[0][0]:
                    data = None
                    data_set = execute_query('select name, depart_name, practical_n, lections_n, labs_n, credits, description from course join depart on course.depart_id = depart.id where course.id = ?', [text[0]])[0]
                    groups = [item[0] for item in execute_query('select name from group_table join course_group on group_table.id = course_group.group_id where course_id = ?', [text[0]])]
                    if get_role(message) == 'Admin':
                        data = execute_query('select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
                        bot.send_message(message.chat.id, '‚Ñπ–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n' \
                                         '‚Ñπ–ö–∞—Ñ–µ–¥—Ä–∞ –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–ø–æ–¥–∞—ë—Ç –∫—É—Ä—Å: {}\n' \
                                         '‚Ñπ–ö–æ–ª-–≤–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                         '‚Ñπ–ö–æ–ª-–≤–æ –ª–µ–∫—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                        '‚Ñπ–ö–æ–ª-–≤–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                         '‚Ñπ–ö–æ–ª-–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –∫—É—Ä—Å–∞: {}\n'.format(*data_set[:6]) +
                                         '‚Ñπ–ì—Ä—É–ø–ø—ã –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–µ –∫ –∫—É—Ä—Å—É: ' + ', '.join(
                            groups) + '\n' + '‚Ñπ–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n'.format(data_set[6]))
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                        markup.row("-")
                        for id, name in data:
                            markup.row("({}) {}".format(id, name))
                        bot.send_message(message.chat.id,
                                         '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –µ—â—ë –ø–æ –æ–¥–Ω–æ–º—É –∫—É—Ä—Å—É, –≤—ã–±–µ—Ä–∏—Ç–µ –µ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞.\n' +
                                         '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                         reply_markup=markup)
                    elif get_role(message) == 'Teacher':
                        depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
                        if (text[0], ) in execute_query('select id from course where depart_id = ?', [depart]):
                            bot.send_message(message.chat.id, '‚Ñπ–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n' \
                                                              '‚Ñπ–ö–∞—Ñ–µ–¥—Ä–∞ –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–ø–æ–¥–∞—ë—Ç –∫—É—Ä—Å: {}\n' \
                                                              '‚Ñπ–ö–æ–ª-–≤–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                              '‚Ñπ–ö–æ–ª-–≤–æ –ª–µ–∫—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                              '‚Ñπ–ö–æ–ª-–≤–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                              '‚Ñπ–ö–æ–ª-–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –∫—É—Ä—Å–∞: {}\n'.format(*data_set[:6]) +
                                             '‚Ñπ–ì—Ä—É–ø–ø—ã –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–µ –∫ –∫—É—Ä—Å—É: ' + ', '.join(
                                groups) + '\n' + '‚Ñπ–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n'.format(data_set[6]))
                        else:
                            bot.send_message(message.chat.id,'‚ùå–ö—É—Ä—Å —Å–æ–∑–¥–∞–Ω –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –¥—Ä—É–≥–æ–π –∫–∞—Ñ–µ–¥—Ä—ã.\n')
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                        markup.row("-")
                        for id, name in data:
                            markup.row("({}) {}".format(id, name))
                        bot.send_message(message.chat.id,
                                         '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –µ—â—ë –ø–æ –æ–¥–Ω–æ–º—É –∫—É—Ä—Å—É, –≤—ã–±–µ—Ä–∏—Ç–µ –µ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞.\n' +
                                         '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                         reply_markup=markup)

                    elif get_role(message) == 'Student':
                        group = execute_query('select group_id from user where id = ?', [int(message.from_user.id)])[0][
                            0]
                        data = execute_query(
                            'select id, name from course join course_group on id = course_id where group_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                            [group])
                        if (text[0], ) in execute_query('select id from course join course_group on id = course_id where group_id = ?', [group]):
                            bot.send_message(message.chat.id, '‚Ñπ–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n' \
                                                              '‚Ñπ–ö–∞—Ñ–µ–¥—Ä–∞ –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–ø–æ–¥–∞—ë—Ç –∫—É—Ä—Å: {}\n' \
                                                              '‚Ñπ–ö–æ–ª-–≤–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                              '‚Ñπ–ö–æ–ª-–≤–æ –ª–µ–∫—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                              '‚Ñπ–ö–æ–ª-–≤–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                              '‚Ñπ–ö–æ–ª-–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –∫—É—Ä—Å–∞: {}\n'.format(*data_set[:6]) +
                                             '‚Ñπ–ì—Ä—É–ø–ø—ã –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–µ –∫ –∫—É—Ä—Å—É: ' + ', '.join(
                                groups) + '\n' + '‚Ñπ–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n'.format(data_set[6]))
                        else:
                            bot.send_message(message.chat.id,'‚ùå–í–∞—à–∞ –≥—Ä—É–ø–ø–∞ –Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ –∫ –∫—É—Ä—Å—É.\n')
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                        markup.row("-")
                        for id, name in data:
                            markup.row("({}) {}".format(id, name))
                        bot.send_message(message.chat.id,
                                         '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –µ—â—ë –ø–æ –æ–¥–Ω–æ–º—É –∫—É—Ä—Å—É, –≤—ã–±–µ—Ä–∏—Ç–µ –µ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞.\n' +
                                         '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                         reply_markup=markup)
                else:
                    data = None
                    if get_role(message) == 'Admin':
                        data = execute_query('select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
                    elif get_role(message) == 'Teacher':
                        depart = \
                        execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
                    elif get_role(message) == 'Student':
                        group = execute_query('select group_id from user where id = ?', [int(message.from_user.id)])[0][
                            0]
                        print(group)
                        data = execute_query(
                            'select id, name from course join course_group on id = course_id where group_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                            [group])
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("-")
                    for id, name in data:
                        markup.row("({}) {}".format(id, name))
                    bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞.")
                    bot.send_message(message.chat.id,
                                     '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                                     '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                     reply_markup=markup)
            except Exception as ex:
                data = None
                if get_role(message) == 'Admin':
                    data = execute_query('select id, name from course')
                elif get_role(message) == 'Teacher':
                    depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                    data = execute_query('select id, name from course where depart_id = ?', [depart])
                elif get_role(message) == 'Student':
                    group = execute_query('select group_id from user where id = ?', [int(message.from_user.id)])[0][0]
                    print(group)
                    data = execute_query(
                        'select id, name from course join course_group on id = course_id where group_id = ?', [group])
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("-")
                for id, name in data:
                    markup.row("({}) {}".format(id, name))
                bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞.")
                bot.send_message(message.chat.id,
                                 '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                                 '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                 reply_markup=markup)
    elif state == 'del_course_choise':
        text = message.text
        text = text.split(' ')
        if text[0] == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'Chill')
        else:
            try:
                text[0] = text[0][1:len(text[0]) - 1]
                if text[0] == execute_query('select id from course where id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [text[0]])[0][0]:
                    data = None
                    data_set = execute_query(
                        'select name, depart_name, practical_n, lections_n, labs_n, credits, description from course join depart on course.depart_id = depart.id where course.id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                        [text[0]])[0]
                    groups = [item[0] for item in execute_query(
                        'select name from group_table join course_group on group_table.id = course_group.group_id where course_id = ?',
                        [text[0]])]
                    if get_role(message) == 'Admin':
                        data = execute_query('select id, name from course')
                        bot.send_message(message.chat.id, '‚Ñπ–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n' \
                                                          '‚Ñπ–ö–∞—Ñ–µ–¥—Ä–∞ –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–ø–æ–¥–∞—ë—Ç –∫—É—Ä—Å: {}\n' \
                                                          '‚Ñπ–ö–æ–ª-–≤–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                          '‚Ñπ–ö–æ–ª-–≤–æ –ª–µ–∫—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                          '‚Ñπ–ö–æ–ª-–≤–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                          '‚Ñπ–ö–æ–ª-–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –∫—É—Ä—Å–∞: {}\n'.format(*data_set[:6]) +
                                         '‚Ñπ–ì—Ä—É–ø–ø—ã –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–µ –∫ –∫—É—Ä—Å—É: ' + ', '.join(
                            groups) + '\n' + '‚Ñπ–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n'.format(data_set[6]))
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                        markup.row("–î–∞", "–ù–µ—Ç")
                        bot.send_message(message.chat.id, "–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫—É—Ä—Å?", reply_markup=markup)
                        set_additional_data(message, text[0])
                        set_state(message, 'del_course_confirm')
                    elif get_role(message) == 'Teacher':
                        depart = \
                        execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = [i[0] for i in execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])]
                        if text[0] in data:
                            bot.send_message(message.chat.id, '‚Ñπ–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n' \
                                                              '‚Ñπ–ö–∞—Ñ–µ–¥—Ä–∞ –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–ø–æ–¥–∞—ë—Ç –∫—É—Ä—Å: {}\n' \
                                                              '‚Ñπ–ö–æ–ª-–≤–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                              '‚Ñπ–ö–æ–ª-–≤–æ –ª–µ–∫—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                              '‚Ñπ–ö–æ–ª-–≤–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                              '‚Ñπ–ö–æ–ª-–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –∫—É—Ä—Å–∞: {}\n'.format(*data_set[:6]) +
                                             '‚Ñπ–ì—Ä—É–ø–ø—ã –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–µ –∫ –∫—É—Ä—Å—É: ' + ', '.join(
                                groups) + '\n' + '‚Ñπ–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n'.format(data_set[6]))
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                            markup.row("–î–∞", "–ù–µ—Ç")
                            bot.send_message(message.chat.id, "–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫—É—Ä—Å?",
                                             reply_markup=markup)
                            set_additional_data(message, text[0])
                            set_state(message, 'del_course_confirm')
                        else:
                            depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                            data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                            markup.row("-")
                            for id, name in data:
                                markup.row("({}) {}".format(id, name))
                            bot.send_message(message.chat.id,
                                             '‚ùå–ö—É—Ä—Å —Å–æ–∑–¥–∞–Ω –¥—Ä—É–≥–æ–π –∫–∞—Ñ–µ–¥—Ä–æ–π, –µ–≥–æ –Ω–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫—É—Ä—Å.\n' +
                                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                             reply_markup=markup)
                else:
                    data = None
                    if get_role(message) == 'Admin':
                        data = execute_query('select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
                    elif get_role(message) == 'Teacher':
                        depart = \
                        execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("-")
                    for id, name in data:
                        markup.row("({}) {}".format(id, name))
                    bot.send_message(message.chat.id,
                                     '‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞. –í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n' +
                                     '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                     reply_markup=markup)
            except Exception as ex:
                data = None
                if get_role(message) == 'Admin':
                    data = execute_query('select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
                elif get_role(message) == 'Teacher':
                    depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                    data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("-")
                for id, name in data:
                    markup.row("({}) {}".format(id, name))
                bot.send_message(message.chat.id,
                                 '‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞. –í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n' +
                                 '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                 reply_markup=markup)
    elif state == 'del_course_confirm':
        text = message.text
        if text.upper() == "–î–ê":
            id = get_additional_data(message)[0]
            files = execute_query('select path from file join lesson on file.lesson_id = lesson.id where lesson.course_id = ?', [get_additional_data(message)[0]])
            for file in files:
                os.remove(file[0])
            execute_query(
                'delete from file where lesson_id in (select id from lesson where course_id = ?)',
                [get_additional_data(message)[0]])
            execute_query('delete from file where lesson_id = ?', [get_additional_data(message)[0]])
            execute_query('delete from lesson where course_id = ?', [id])
            execute_query('delete from course where id = ?', [id])
            execute_query('delete from course_group where course_id = ?', [id])
            set_state(message, 'del_course_choise')
            del_additional_data(message)
            data = None
            if get_role(message) == 'Admin':
                data = execute_query('select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id,
                             '‚úÖ–í—ã –≤—ã–±—Ä–∞–ª–∏ "–¥–∞", –∫—É—Ä—Å —É–¥–∞–ª—ë–Ω, —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω?' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
        elif text.upper() == "–ù–ï–¢":
            set_state(message, 'del_course_choise')
            del_additional_data(message)
            data = None
            if get_role(message) == 'Admin':
                data = execute_query('select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id,
                             '‚úÖ–í—ã –≤—ã–±—Ä–∞–ª–∏ "–Ω–µ—Ç", —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–∞–∫–æ–π-—Ç–æ –¥—Ä—É–≥–æ–π –∫—É—Ä—Å?\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–î–∞", "–ù–µ—Ç")
            bot.send_message(message.chat.id, '‚ö†‚ö†‚ö†–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫—É—Ä—Å? (–î–∞/–ù–µ—Ç) ',
                             reply_markup=markup)
    elif state == 'change_course_start':
        text = message.text
        text = text.split(' ')
        if text[0] == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'Chill')
        else:
            try:
                text[0] = text[0][1:len(text[0]) - 1]
                if text[0] == execute_query('select id from course where id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [text[0]])[0][0]:
                    data = None
                    data_set = execute_query(
                        'select name, depart_name, practical_n, lections_n, labs_n, credits, description from course join depart on course.depart_id = depart.id where course.id = ?',
                        [text[0]])[0]
                    groups = [item[0] for item in execute_query(
                        'select name from group_table join course_group on group_table.id = course_group.group_id where course_id = ?',
                        [text[0]])]
                    if get_role(message) == 'Admin':
                        bot.send_message(message.chat.id, '‚Ñπ–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n' \
                                                          '‚Ñπ–ö–∞—Ñ–µ–¥—Ä–∞ –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–ø–æ–¥–∞—ë—Ç –∫—É—Ä—Å: {}\n' \
                                                          '‚Ñπ–ö–æ–ª-–≤–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                          '‚Ñπ–ö–æ–ª-–≤–æ –ª–µ–∫—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                          '‚Ñπ–ö–æ–ª-–≤–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                          '‚Ñπ–ö–æ–ª-–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –∫—É—Ä—Å–∞: {}\n'.format(*data_set[:6]) +
                                         '‚Ñπ–ì—Ä—É–ø–ø—ã –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–µ –∫ –∫—É—Ä—Å—É: ' + ', '.join(
                            groups) + '\n' + '‚Ñπ–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n'.format(data_set[6]))
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                        markup.row("–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–ì—Ä—É–ø–ø—ã")
                        markup.row('-')
                        bot.send_message(message.chat.id, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –∫—É—Ä—Å–µ?", reply_markup=markup)
                        set_additional_data(message, text[0])
                        set_state(message, 'change_course_answer')
                    elif get_role(message) == 'Teacher':
                        depart = \
                            execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]

                        data = [i[0] for i in
                                execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])]
                        if text[0] in data:
                            bot.send_message(message.chat.id, '‚Ñπ–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n' \
                                                              '‚Ñπ–ö–∞—Ñ–µ–¥—Ä–∞ –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–ø–æ–¥–∞—ë—Ç –∫—É—Ä—Å: {}\n' \
                                                              '‚Ñπ–ö–æ–ª-–≤–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                              '‚Ñπ–ö–æ–ª-–≤–æ –ª–µ–∫—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                              '‚Ñπ–ö–æ–ª-–≤–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π: {}\n' \
                                                              '‚Ñπ–ö–æ–ª-–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –∫—É—Ä—Å–∞: {}\n'.format(*data_set[:6]) +
                                             '‚Ñπ–ì—Ä—É–ø–ø—ã –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–µ –∫ –∫—É—Ä—Å—É: ' + ', '.join(
                                groups) + '\n' + '‚Ñπ–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n'.format(data_set[6]))
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                            markup.row("–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–ì—Ä—É–ø–ø—ã")
                            markup.row('-')
                            bot.send_message(message.chat.id, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –∫—É—Ä—Å–µ?", reply_markup=markup)
                            set_additional_data(message, text[0])
                            set_state(message, 'change_course_answer')
                        else:
                            depart = \
                            execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                            data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                            markup.row("-")
                            for id, name in data:
                                markup.row("({}) {}".format(id, name))
                            bot.send_message(message.chat.id,
                                             '‚ùå–ö—É—Ä—Å —Å–æ–∑–¥–∞–Ω –¥—Ä—É–≥–æ–π –∫–∞—Ñ–µ–¥—Ä–æ–π, –µ–≥–æ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫—É—Ä—Å.\n' +
                                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                             reply_markup=markup)
                else:
                    data = None
                    if get_role(message) == 'Admin':
                        data = execute_query('select id, name from course')
                    elif get_role(message) == 'Teacher':
                        depart = \
                            execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("-")
                    for id, name in data:
                        markup.row("({}) {}".format(id, name))
                    bot.send_message(message.chat.id,
                                     '‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞. –í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n' +
                                     '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                     reply_markup=markup)
            except Exception as ex:
                data = None
                if get_role(message) == 'Admin':
                    data = execute_query('select id, name from course')
                elif get_role(message) == 'Teacher':
                    depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                    data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("-")
                for id, name in data:
                    markup.row("({}) {}".format(id, name))
                bot.send_message(message.chat.id,
                                 '‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞. –í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n' +
                                 '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                 reply_markup=markup)
    elif state == 'change_course_answer':
        if message.text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            del_additional_data(message)
            set_state(message, 'change_course_start')
            data = None
            if get_role(message) == 'Admin':
                data = execute_query('select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
        elif (message.text).upper() == '–ù–ê–ó–í–ê–ù–ò–ï –ö–£–†–°–ê':
            data = execute_query('select name from course where id = ?',[get_additional_data(message)[0]])[0][0]
            set_state(message, 'change_course_name')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–°—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n".format(data)+
                             "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∫—É—Ä—Å–∞\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif (message.text).upper()  == '–û–ü–ò–°–ê–ù–ò–ï –ö–£–†–°–ê':
            set_state(message, 'change_course_descr')
            data = execute_query('select description from course where id = ?', [get_additional_data(message)[0]])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–°—Ç–∞—Ä–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {}\n".format(data)+
                             "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫—É—Ä—Å–∞\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif (message.text).upper() == '–ö–û–õ-–í–û –ö–†–ï–î–ò–¢–û–í':
            set_state(message, 'change_course_credits')
            data = execute_query('select credits from course where id = ?', [get_additional_data(message)[0]])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–°—Ç–∞—Ä–æ–µ –∫–æ–ª-–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –≤ –∫—É—Ä—Å–µ: {}\n".format(data)+
                             "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª-–≤–æ –∫—Ä–µ–¥–∏—Ç –¥–ª—è –∫—É—Ä—Å–∞\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif (message.text).upper() == '–ì–†–£–ü–ü–´':
            set_state(message, 'change_course_group')
            groups = [item[0] for item in execute_query('select name from group_table join course_group on group_table.id = course_group.group_id where course_id = ?', [get_additional_data(message)[0]])]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–î–æ–±–∞–≤–∏—Ç—å", "–£–¥–∞–ª–∏—Ç—å")
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–°—Ç–∞—Ä—ã–π —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω—ã—ã—Ö –∫ –∫—É—Ä—Å—É: "+ ', '.join(groups) + '\n' +
                             "–í—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –µ—ë –∏–∑ –∫—É—Ä—Å–∞?\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–ì—Ä—É–ø–ø—ã")
            markup.row('-')
            bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä. –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –∫—É—Ä—Å–µ?\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
    elif state == 'change_course_name':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'change_course_answer')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–ì—Ä—É–ø–ø—ã")
            markup.row('-')
            bot.send_message(message.chat.id, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –∫—É—Ä—Å–µ?", reply_markup=markup)
        elif all([re.fullmatch('[A-Za-z–ê-–Ø–∞-—è—ë–Å–á—ó–Ñ—î–Ü—ñ“ê“ë]{1,25}', i) for i in text.split(' ')]) and text != '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ':
            execute_query('update course set name = ? where id = ?', [text, get_additional_data(message)[0]])
            set_state(message, 'change_course_answer')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–ì—Ä—É–ø–ø—ã")
            markup.row('-')
            bot.send_message(message.chat.id, "‚úÖ–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞ –∏–∑–º–µ–Ω–µ–Ω–æ. –ß—Ç–æ –µ—â—ë –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –∫—É—Ä—Å–µ?", reply_markup=markup)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, '–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∫—É—Ä—Å–∞ (–∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã &%$#)\n' +
                             '‚úÖ–ü—Ä–∏–º–µ—Ä: –ú–µ—Ç–æ–¥—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π\n' +
                             '‚úÖ–ü—Ä–∏–º–µ—Ä: –î–∏—Å–∫—Ä–µ—Ç–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
    elif state == 'change_course_descr':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'change_course_answer')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–ì—Ä—É–ø–ø—ã")
            markup.row('-')
            bot.send_message(message.chat.id, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –∫—É—Ä—Å–µ?", reply_markup=markup)
        elif len(text) > 2000:
            bot.send_message(message.chat.id,
                             '‚ùå–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ, –æ–ø–∏—à–∏—Ç–µ –∫—É—Ä—Å –Ω–µ–º–Ω–æ–≥–æ –∫–æ—Ä–æ—á–µ (–¥–æ 2000 —Å–∏–º–≤–æ–ª–æ–≤)\n'+
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.')
        elif text != '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ':
            execute_query('update course set description = ? where id = ?', [text, get_additional_data(message)[0]])
            set_state(message, 'change_course_answer')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–ì—Ä—É–ø–ø—ã")
            markup.row('-')
            bot.send_message(message.chat.id, "‚úÖ–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞ –∏–∑–º–µ–Ω–µ–Ω–æ. –ß—Ç–æ –µ—â—ë –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –∫—É—Ä—Å–µ?",
                             reply_markup=markup)
        else:
            bot.send_message(message.chat.id,
                             '‚ùå–ó–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.')
    elif state == 'change_course_credits':
        text = message.text
        check = True
        num = None
        try:
            num = int(text)
        except Exception:
            num = None
            check = False
        if num is not None:
            check = (num >= 0)
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'change_course_answer')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–ì—Ä—É–ø–ø—ã")
            markup.row('-')
            bot.send_message(message.chat.id, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –∫—É—Ä—Å–µ?", reply_markup=markup)
        elif check and text != '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ':
            execute_query('update course set credits = ? where id = ?', [num, get_additional_data(message)[0]])
            set_state(message, 'change_course_answer')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–ì—Ä—É–ø–ø—ã")
            markup.row('-')
            bot.send_message(message.chat.id, "‚úÖ–ö–æ–ª-–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –∫—É—Ä—Å–∞ –∏–∑–º–µ–Ω–µ–Ω–æ. –ß—Ç–æ –µ—â—ë –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –∫—É—Ä—Å–µ?",
                             reply_markup=markup)
        else:
            bot.send_message(message.chat.id,
                             '‚ö†–í—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É. –ö–æ–ª-–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –∏ –Ω–µ —è–≤–ª—è—Ç—å—Å—è –±—É–∫–≤–æ–π.\n' +
                             '‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ: 4\n' +
                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ: -18 –∞—Ñ')
    elif state == 'change_course_group':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'change_course_answer')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞", "–ì—Ä—É–ø–ø—ã")
            markup.row('-')
            bot.send_message(message.chat.id, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –∫—É—Ä—Å–µ?", reply_markup=markup)
        elif text.upper() == "–î–û–ë–ê–í–ò–¢–¨":
            set_state(message, 'change_course_group_add')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row('-')
            for group in execute_query('select name from group_table order by name'):
                markup.row(group[0])
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫—É—Ä—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ—ë –≤ —á–∞—Ç.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif text.upper() == "–£–î–ê–õ–ò–¢–¨":
            set_state(message, 'change_course_group_del')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row('-')
            for group in execute_query('select name from group_table join course_group on course_group.group_id = group_table.id where course_id = ? order by name', [get_additional_data(message)[0]]):
                markup.row(group[0])
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä–µ–ø–∏—Ç—å –æ—Ç –∫—É—Ä—Å–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ—ë –≤ —á–∞—Ç.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–î–æ–±–∞–≤–∏—Ç—å", "–£–¥–∞–ª–∏—Ç—å")
            markup.row("-")
            bot.send_message(message.chat.id, "‚ùå–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –í—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –µ—ë –∏–∑ –∫—É—Ä—Å–∞?\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
    elif state == 'change_course_group_add':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'change_course_group')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–î–æ–±–∞–≤–∏—Ç—å", "–£–¥–∞–ª–∏—Ç—å")
            markup.row("-")
            bot.send_message(message.chat.id,
                             "–°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä, –í—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –µ—ë –∏–∑ –∫—É—Ä—Å–∞?\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif text.upper() in [item[0].upper() for item in execute_query("select name from group_table")]:
            names = [(item[0], item[1].upper()) for item in execute_query("select id, name from group_table")]
            group = None
            for i in names:
                if i[1] == text.upper():
                    group = i[0]
                    break
            if (group, ) not in execute_query('select group_id from course_group where course_id = ?', [get_additional_data(message)[0]]):
                execute_query('insert into course_group(course_id, group_id) values (?, ?)', [get_additional_data(message)[0], group])
                set_state(message, 'change_course_group')
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("–î–æ–±–∞–≤–∏—Ç—å", "–£–¥–∞–ª–∏—Ç—å")
                markup.row("-")
                bot.send_message(message.chat.id,
                                 "‚úÖ–ì—Ä—É–ø–ø–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞, –í—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–Ω—É –≥—Ä—É–ø–ø—É –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É –∏–∑ –∫—É—Ä—Å–∞?\n" +
                                 '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            else:
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("-")
                for group in execute_query('select name from group_table order by name'):
                    markup.row(group[0])
                bot.send_message(message.chat.id,
                                 '‚ùå–ì—Ä—É–ø–ø–∞ —É–∂–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ –∫ –∫—É—Ä—Å—É. \n' +
                                 '‚Ñπ–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥—É—é –≥—Ä—É–ø–ø—É, –≤—ã–±–µ—Ä–∏—Ç–µ –µ—ë –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç.\n' +
                                 '‚ö†–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–ø–∏—à–∏—Ç–µ "-"', reply_markup=markup)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for group in execute_query('select name from group_table order by name'):
                markup.row(group[0])
            bot.send_message(message.chat.id,
                             '‚ùå–¢–∞–∫–æ–π –≥—Ä—É–ø–ø—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫—É—Ä—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ—ë –≤ —á–∞—Ç.\n' +
                             '‚ö†–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–ø–∏—à–∏—Ç–µ "-"', reply_markup=markup)
    elif state == 'change_course_group_del':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'change_course_group')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–î–æ–±–∞–≤–∏—Ç—å", "–£–¥–∞–ª–∏—Ç—å")
            markup.row("-")
            bot.send_message(message.chat.id,
                             "–°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä, –í—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –µ—ë –∏–∑ –∫—É—Ä—Å–∞?\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif text.upper() in [item[0].upper() for item in execute_query("select name from group_table")]:
            names = [(item[0], item[1].upper()) for item in execute_query("select id, name from group_table")]
            group = None
            for i in names:
                if i[1] == text.upper():
                    group = i[0]
                    break
            if (group, ) in execute_query('select group_id from course_group where course_id = ?', [get_additional_data(message)[0]]):
                execute_query('delete from course_group where course_id = ? and group_id = ?', [get_additional_data(message)[0], group])
                set_state(message, 'change_course_group')
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("–î–æ–±–∞–≤–∏—Ç—å", "–£–¥–∞–ª–∏—Ç—å")
                markup.row("-")
                bot.send_message(message.chat.id,
                                 "‚úÖ–ì—Ä—É–ø–ø–∞ —É–¥–∞–ª–µ–Ω–∞, –í—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–Ω—É –≥—Ä—É–ø–ø—É –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É –∏–∑ –∫—É—Ä—Å–∞?\n" +
                                 '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
            else:
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("-")
                for group in execute_query('select name from group_table join course_group on course_group.group_id = group_table.id where course_id = ? order by name',
                        [get_additional_data(message)[0]]):
                    markup.row(group[0])
                bot.send_message(message.chat.id,
                                 '‚ùå–ì—Ä—É–ø–ø–∞ –Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ –∫ –∫—É—Ä—Å—É. \n' +
                                 '–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä–µ–ø–∏—Ç—å –æ—Ç –∫—É—Ä—Å–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ—ë –≤ —á–∞—Ç.\n' +
                                 '‚ö†–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–ø–∏—à–∏—Ç–µ "-"', reply_markup=markup)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for group in execute_query('select name from group_table join course_group on course_group.group_id = group_table.id where course_id = ? order by name', [get_additional_data(message)[0]]):
                markup.row(group[0])
            bot.send_message(message.chat.id,
                             '‚ùå–¢–∞–∫–æ–π –≥—Ä—É–ø–ø—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä–µ–ø–∏—Ç—å –æ—Ç –∫—É—Ä—Å–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ—ë –≤ —á–∞—Ç.\n' +
                             '‚ö†–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–ø–∏—à–∏—Ç–µ "-"', reply_markup=markup)
    elif state == "Chill":
        text = message.text
        if text.upper() == "–ò–ù–°–¢–†–£–ö–¶–ò–Ø":
            msg = '–û—Ç—Ä–ø–∞–≤—å—Ç–µ –æ–¥–Ω–æ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç\n\n'
            role = get_role(message)
            if role in ('Admin', 'Student', 'Teacher'):
                msg += "‚úèÔ∏è'–ö—É—Ä—Å—ã' ‚Äî –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—É—Ä—Å–æ–≤\n"
                msg += "‚úèÔ∏è'–ó–∞–Ω—è—Ç–∏—è' ‚Äî –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π –≤ –∫—É—Ä—Å–µ\n"
                msg += "‚úèÔ∏è'–ò–∑–º–µ–Ω–∏—Ç—å –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ' ‚Äî –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π –≤ –∫—É—Ä—Å–µ\n"
                if role in ('Admin', 'Teacher'):
                    msg += "‚úèÔ∏è'–î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å' ‚Äî –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã–π –∫—É—Ä—Å\n"
                    msg += "‚úèÔ∏è'–ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å' ‚Äî –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–µ\n"
                    msg += "‚úèÔ∏è'–£–¥–∞–ª–∏—Ç—å –∫—É—Ä—Å' ‚Äî –ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞\n"
                    msg += "‚úèÔ∏è'–î–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ' ‚Äî –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è –≤ –∫—É—Ä—Å\n"
                    msg += "‚úèÔ∏è'–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ' ‚Äî –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–Ω—è—Ç–∏–∏\n"
                    msg += "‚úèÔ∏è'–£–¥–∞–ª–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ' ‚Äî –ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è –∏–∑ –∫—É—Ä—Å–∞\n"
                    if role in ('Admin'):
                        msg += "‚úèÔ∏è'–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è' ‚Äî –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º—É\n"
                        msg += "‚úèÔ∏è'–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' ‚Äî –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ\n"
                        msg += "‚úèÔ∏è'–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π' ‚Äî —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏–∑ —Å–∏—Å—Ç–µ–º—ã\n"
            msg += "‚úèÔ∏è'–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π' ‚Äî –ø—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ\n"
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            role = get_role(message)
            if role in ('Admin', 'Student', 'Teacher'):
                markup.row('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', '–ö—É—Ä—Å—ã', '–ó–∞–Ω—è—Ç–∏—è')
                if role in ('Admin', 'Teacher'):
                    markup.row('–î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å', '–ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å', '–£–¥–∞–ª–∏—Ç—å –∫—É—Ä—Å')
                    markup.row('–î–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ', '–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ', '–£–¥–∞–ª–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ')
                    if role in ('Admin'):
                        markup.row('–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è', '–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', '–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π')
            markup.row('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π', '–ò–∑–º–µ–Ω–∏—Ç—å –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
            bot.send_message(message.chat.id, msg, reply_markup=markup)
        elif text.upper() == "–î–û–ë–ê–í–ò–¢–¨ –ü–†–ï–ü–û–î–ê–í–ê–¢–ï–õ–Ø" and get_role(message) == 'Admin':
            set_state(message, 'add_teacher_reply')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–ü–µ—Ä–µ—à–ª–∏—Ç–µ –û–î–ù–û —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º.\n‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–æ–±–∞–ª–≤–µ–Ω–∏—è.',
                             reply_markup=markup)
        elif text.upper() == "–ò–ó–ú–ï–ù–ò–¢–¨ –õ–ò–ß–ù–´–ï –î–ê–ù–ù–´–ï":
            set_state(message, 'edit_myself')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–ò–º—è", "–§–∞–º–∏–ª–∏—è", "@id")
            markup.row("Email", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ö–∞—Ñ–µ–¥—Ä–∞")
            markup.row("–ì—Ä—É–ø–ø–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–æ–±–∞–ª–≤–µ–Ω–∏—è.',
                             reply_markup=markup)
        elif text.upper() == "–ü–†–û–°–ú–û–¢–†–ï–¢–¨ –ü–†–ï–ü–û–î–ê–í–ê–¢–ï–õ–ï–ô":
            set_state(message, 'show_teacher_list')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for name, surname, t_id, chat_id in get_teachers_info():
                markup.row("{} {} @{} ({})".format(name, surname, t_id, chat_id))
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
        elif text.upper() == "–ò–ó–ú–ï–ù–ò–¢–¨ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø" and get_role(message) == 'Admin':
            set_state(message, 'change_user_start')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for role, name, surname, t_id, chat_id in get_users_info():
                if role != 'NRG':
                    markup.row("{} | {} {} @{} ({})".format(role, name, surname, t_id, chat_id))
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
        elif text.upper() == "–£–î–ê–õ–ò–¢–¨ –ü–†–ï–ü–û–î–ê–í–ê–¢–ï–õ–ï–ô" and get_role(message) == 'Admin':
            set_state(message, 'del_teacher_start')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for name, surname, t_id, chat_id in get_teachers_info():
                markup.row("{} {} @{} ({})".format(name, surname, t_id, chat_id))
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
        elif text.upper() == "–î–û–ë–ê–í–ò–¢–¨ –ö–£–†–°" and get_role(message) in ('Admin', 'Teacher'):
            set_state(message, 'add_course_name')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞\n' +
                                              '‚úÖ–ü—Ä–∏–º–µ—Ä: –ú–µ—Ç–æ–¥—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π\n' +
                                              '‚úÖ–ü—Ä–∏–º–µ—Ä: –î–∏—Å–∫—Ä–µ—Ç–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞\n' +
                                                '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã\n' +
                                                '‚ö†–ü–æ—Å–ª–µ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –≤—ã –¥–æ–ª–∂–Ω—ã –±—É–¥–µ—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∫—É—Ä—Å—É\n‚ö†–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!', reply_markup=markup)
        elif text.upper() == "–ö–£–†–°–´":
            data = None
            if get_role(message) == 'Admin':
                data = execute_query('select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
            elif get_role(message) == 'Student':
                group = execute_query('select group_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course join course_group on id = course_id where group_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [group])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å.\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
            set_state(message, 'watch_course_choise')
        elif text.upper() == "–£–î–ê–õ–ò–¢–¨ –ö–£–†–°" and get_role(message) in ('Admin', 'Teacher'):
            data = None
            if get_role(message) == 'Admin':
                data = execute_query('select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É–¥–∞–ª–∏—Ç—å.\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
            set_state(message, 'del_course_choise')
        elif text.upper() == "–ò–ó–ú–ï–ù–ò–¢–¨ –ö–£–†–°"and get_role(message) in ('Admin', 'Teacher'):
            data = None
            if get_role(message) == 'Admin':
                data = execute_query('select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –Ω–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ.\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
            set_state(message, 'change_course_start')
        elif text.upper() == "–î–û–ë–ê–í–ò–¢–¨ –ó–ê–ù–Ø–¢–ò–ï" and get_role(message) in ('Admin', 'Teacher'):
            data = None
            if get_role(message) == 'Admin':
                data = execute_query(
                    'select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query(
                    'select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                    [depart])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –≤ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ.\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
            set_state(message, 'add_lesson_start')
        elif text.upper() == "–ó–ê–ù–Ø–¢–ò–Ø":
            data = None
            if get_role(message) == 'Admin':
                data = execute_query('select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
            elif get_role(message) == 'Student':
                group = execute_query('select group_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course join course_group on id = course_id where group_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [group])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –∑–∞–Ω—è—Ç–∏–µ –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å.\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
            set_state(message, 'watch_lesson_start')
        elif text.upper() == "–£–î–ê–õ–ò–¢–¨ –ó–ê–ù–Ø–¢–ò–ï" and get_role(message) in ('Admin', 'Teacher'):
            data = None
            if get_role(message) == 'Admin':
                data = execute_query('select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
            elif get_role(message) == 'Student':
                group = execute_query('select group_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course join course_group on id = course_id where group_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [group])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –∑–∞–Ω—è—Ç–∏–µ –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å.\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
            set_state(message, 'del_lesson_start')
        elif text.upper() == "–ò–ó–ú–ï–ù–ò–¢–¨ –ó–ê–ù–Ø–¢–ò–ï" and get_role(message) in ('Admin', 'Teacher'):
            data = None
            if get_role(message) == 'Admin':
                data = execute_query('select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
            elif get_role(message) == 'Student':
                group = execute_query('select group_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course join course_group on id = course_id where group_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [group])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –∑–∞–Ω—è—Ç–∏–µ –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
            set_state(message, 'edit_lesson_start')
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            role = get_role(message)
            if role in ('Admin', 'Student', 'Teacher'):
                markup.row('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', '–ö—É—Ä—Å—ã', '–ó–∞–Ω—è—Ç–∏—è')
                if role in ('Admin', 'Teacher'):
                    markup.row('–î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å', '–ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å', '–£–¥–∞–ª–∏—Ç—å –∫—É—Ä—Å')
                    markup.row('–î–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ', '–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ', '–£–¥–∞–ª–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ')
                    if role in ('Admin'):
                        markup.row('–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è', '–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', '–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π')
            markup.row('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π', '–ò–∑–º–µ–Ω–∏—Ç—å –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
            bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é, –Ω–∞–ø–∏—à–∏—Ç–µ –¥—Ä—É–≥—É—é –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –µ—ë –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ",
                             reply_markup=markup)
    elif state == 'add_lesson_start':
        text = message.text
        text = text.split(' ')
        if text[0] == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'Chill')
        else:
            try:
                text[0] = text[0][1:len(text[0]) - 1]
                if text[0] == execute_query('select id from course where id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [text[0]])[0][0]:
                    data = None
                    if get_role(message) == 'Admin':
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                        markup.row('-')
                        bot.send_message(message.chat.id, "‚úÖ–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è\n"+
                                             '‚ö†–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –≤—ã –¥–æ–ª–∂–Ω—ã –±—É–¥–µ—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫—É—Ä—Å–µ\n‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',  reply_markup=markup)
                        set_additional_data(message, text[0])
                        set_state(message, 'add_lesson_name')
                    elif get_role(message) == 'Teacher':
                        depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]

                        data = [i[0] for i in
                                execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])]
                        if text[0] in data:
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                            markup.row('-')
                            bot.send_message(message.chat.id, "‚úÖ–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è\n"+
                                             '‚ö†–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –≤—ã –¥–æ–ª–∂–Ω—ã –±—É–¥–µ—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫—É—Ä—Å–µ\n‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
                            set_additional_data(message, text[0])
                            set_state(message, 'add_lesson_name')
                        else:
                            depart = \
                            execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                            data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                            markup.row("-")
                            for id, name in data:
                                markup.row("({}) {}".format(id, name))
                            bot.send_message(message.chat.id,
                                             '‚ùå–ö—É—Ä—Å —Å–æ–∑–¥–∞–Ω –¥—Ä—É–≥–æ–π –∫–∞—Ñ–µ–¥—Ä–æ–π, –≤ –Ω–µ–≥–æ –Ω–µ–ª—å–∑—è –Ω–∏—á–µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫—É—Ä—Å.\n' +
                                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                             reply_markup=markup)
                else:
                    data = None
                    if get_role(message) == 'Admin':
                        data = execute_query('select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
                    elif get_role(message) == 'Teacher':
                        depart = \
                            execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("-")
                    for id, name in data:
                        markup.row("({}) {}".format(id, name))
                    bot.send_message(message.chat.id,
                                     '‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞. –í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n' +
                                     '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                     reply_markup=markup)
            except Exception as ex:
                print(ex)
                data = None
                if get_role(message) == 'Admin':
                    data = execute_query('select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
                elif get_role(message) == 'Teacher':
                    depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                    data = execute_query('select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"', [depart])
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("-")
                for id, name in data:
                    markup.row("({}) {}".format(id, name))
                bot.send_message(message.chat.id,
                                 '‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞. –í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n' +
                                 '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                 reply_markup=markup)
    elif state == 'add_lesson_name':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            data = None
            if get_role(message) == 'Admin':
                data = execute_query(
                    'select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query(
                    'select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                    [depart])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –≤ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ.\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
            set_state(message, 'add_lesson_start')
        elif all([re.fullmatch('[A-Za-z–ê-–Ø–∞-—è0-9—ë–Å|–á—ó–Ñ—î–Ü—ñ“ê“ë]{1,25}', i) for i in text.split(' ')]) and text != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ":
            id = str(datetime.datetime.now())
            id = id.split(' ')
            id = '_'.join(id)
            execute_query('insert into lesson(id, name, course_id, teacher_id) values (?, ?, ?, ?)', [id, text, get_additional_data(message)[0], int(message.from_user.id)])
            del_additional_data(message)
            set_additional_data(message, id)
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–õ–µ–∫—Ü–∏—è", "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ", "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞")
            bot.send_message(message.chat.id, '‚úÖ–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è –∑–∞–ø–∏—Å–∞–Ω–æ.\n–í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø –∑–∞–Ω—è—Ç–∏—è: –ª–µ–∫—Ü–∏—è, –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ, –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞', reply_markup=markup)
            set_state(message, 'add_lesson_type')
        else:
            bot.send_message(message.chat.id,
                             '‚ùå–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ, —É–¥–∞–ª–∏—Ç–µ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –±—É–∫–≤–æ–π –∏–ª–∏ —Ü–∏—Ñ—Ä–æ–π.\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.')
    elif state == 'add_lesson_type':
        text = message.text
        if text.upper() in ("–õ–ï–ö–¶–ò–Ø", "–ü–†–ê–ö–¢–ò–ß–ï–°–ö–û–ï –ó–ê–ù–Ø–¢–ò–ï", "–õ–ê–ë–û–†–ê–¢–û–†–ù–ê–Ø –†–ê–ë–û–¢–ê"):
            type_l = ''
            if text.upper() == "–õ–ï–ö–¶–ò–Ø":
                type_l = '–õ–µ–∫—Ü–∏—è'
                id, n = execute_query('select course.id, lections_n from course join lesson on course.id = lesson.course_id where lesson.id = ?', [get_additional_data(message)[0]])[0]
                n+=1
                execute_query('update course set lections_n = ? where id = ?', [n, id])
            elif text.upper() == "–ü–†–ê–ö–¢–ò–ß–ï–°–ö–û–ï –ó–ê–ù–Ø–¢–ò–ï":
                type_l = '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ'
                id, n = execute_query(
                    'select course.id, practical_n from course join lesson on course.id = lesson.course_id where lesson.id = ?',
                    [get_additional_data(message)[0]])[0]
                n += 1
                execute_query('update course set practical_n = ? where id = ?', [n, id])
            elif text.upper() == "–õ–ê–ë–û–†–ê–¢–û–†–ù–ê–Ø –†–ê–ë–û–¢–ê":
                type_l = "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞"
                id, n = execute_query(
                    'select course.id, labs_n from course join lesson on course.id = lesson.course_id where lesson.id = ?',
                    [get_additional_data(message)[0]])[0]
                n += 1
                execute_query('update course set labs_n = ? where id = ?', [n, id])
            execute_query('update lesson set lesson_type = ? where id = ?', [type_l, get_additional_data(message)[0]])
            markup = types.ReplyKeyboardRemove()
            bot.send_message(message.chat.id, '‚úÖ–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è –∑–∞–ø–∏—Å–∞–Ω. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è (–¥–æ 500 —Å–∏–º–≤–æ–ª–æ–≤)', reply_markup=markup)
            set_state(message, 'add_lesson_description')
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–õ–µ–∫—Ü–∏—è", "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ", "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞")
            bot.send_message(message.chat.id,
                             '‚ùå–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö: –ª–µ–∫—Ü–∏—è, –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ, –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞',
                             reply_markup=markup)
    elif state == 'add_lesson_description':
        text = message.text
        if len(text) > 500:
            bot.send_message(message.chat.id, '‚ùå–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º–∞—è –¥–ª–∏–Ω–Ω–∞ - 500 —Å–∏–º–≤–æ–ª–æ–≤')
        elif len(text) <= 500 and text != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ":
            execute_query('update lesson set description = ? where id = ?', [text, get_additional_data(message)[0]])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, '‚úÖ–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª—ã –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∫ –∑–∞–Ω—è—Ç–∏—é (–ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª –≤ —á–∞—Ç)\n‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –µ—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ —á—Ç–æ –ø—Ä–∏–∫—Ä–µ–ø–∏–ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª-–≤–æ —Ñ–∞–π–ª–æ–≤\n‚ö†‚ö†‚ö†–í–ê–ñ–ù–û! –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤, –∏–Ω–∞—á–µ –æ–Ω–∏ –Ω–µ –±—É–¥—É—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã', reply_markup=markup)
            set_state(message, 'add_lesson_file')
        else:
            bot.send_message(message.chat.id,'‚ùå–ó–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.')
    elif state == 'add_lesson_file':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, '‚úÖ–ó–∞–Ω—è—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ')
            data = None
            if get_role(message) == 'Admin':
                data = execute_query(
                    'select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
            elif get_role(message) == 'Teacher':
                depart = \
                    execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query(
                    'select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                    [depart])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id,
                             '–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–Ω–æ –∑–∞–Ω—è—Ç–∏–µ? –í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
            del_additional_data(message)
            set_state(message, 'add_lesson_start')
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, '‚Ñπ–ù–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏—è –∫ –∑–∞–Ω—è—Ç–∏—é. –ï—Å–ª–∏ –≤—ã –Ω–µ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Ñ–∞–π–ª—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –≤ —á–∞—Ç.\n‚ö†‚ö†‚ö†–í–ê–ñ–ù–û! –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Ç–æ–ª—å–∫–æ PDF —Ñ–æ—Ä–º–∞—Ç–∞. –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤, –∏–Ω–∞—á–µ –æ–Ω–∏ –Ω–µ –±—É–¥—É—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã', reply_markup=markup)
    elif state == 'watch_lesson_start':
        text = message.text
        text = text.split(' ')
        if text[0] == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'Chill')
        else:
            try:
                text[0] = text[0][1:len(text[0]) - 1]
                if text[0] == execute_query(
                        'select id from course where id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                        [text[0]])[0][0]:
                    data = None
                    if get_role(message) == 'Admin':
                        data = execute_query('select id, name from lesson where course_id = ?', [text[0]])
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                        markup.row("-")
                        for id, name in data:
                            markup.row("({}) {}".format(id, name))
                        bot.send_message(message.chat.id,
                                         '–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–Ω—è—Ç–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å.\n' +
                                         '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                         reply_markup=markup)
                        set_state(message, 'watch_lesson_answer')
                        set_additional_data(message, text[0])
                    elif get_role(message) == 'Teacher':
                        depart = \
                        execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = execute_query(
                            'select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                            [depart])
                        if (text[0],) in execute_query('select id from course where depart_id = ?', [depart]):
                            data = execute_query('select id, name from lesson where course_id = ?', [text[0]])
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                            markup.row("-")
                            for id, name in data:
                                markup.row("({}) {}".format(id, name))
                            bot.send_message(message.chat.id,
                                             '–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–Ω—è—Ç–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å.\n' +
                                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                             reply_markup=markup)
                            set_state(message, 'watch_lesson_answer')
                            set_additional_data(message, text[0])
                        else:
                            bot.send_message(message.chat.id, '‚ùå–ö—É—Ä—Å —Å–æ–∑–¥–∞–Ω –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –¥—Ä—É–≥–æ–π –∫–∞—Ñ–µ–¥—Ä—ã.\n')
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                            markup.row("-")
                            for id, name in data:
                                markup.row("({}) {}".format(id, name))
                            bot.send_message(message.chat.id,
                                             '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫—É—Ä—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–Ω—è—Ç–∏–π.\n' +
                                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                             reply_markup=markup)
                    elif get_role(message) == 'Student':
                        group = execute_query('select group_id from user where id = ?', [int(message.from_user.id)])[0][
                            0]
                        data = execute_query(
                            'select id, name from course join course_group on id = course_id where group_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                            [group])
                        if (text[0],) in execute_query(
                                'select id from course join course_group on id = course_id where group_id = ?',
                                [group]):
                            data = execute_query('select id, name from lesson where course_id = ?', [text[0]])
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                            markup.row("-")
                            for id, name in data:
                                markup.row("({}) {}".format(id, name))
                            bot.send_message(message.chat.id,
                                             '–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–Ω—è—Ç–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å.\n' +
                                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                             reply_markup=markup)
                            set_state(message, 'watch_lesson_answer')
                            set_additional_data(message, text[0])
                        else:
                            bot.send_message(message.chat.id, '‚ùå–í–∞—à–∞ –≥—Ä—É–ø–ø–∞ –Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ –∫ –∫—É—Ä—Å—É.\n')
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                            markup.row("-")
                            for id, name in data:
                                markup.row("({}) {}".format(id, name))
                            bot.send_message(message.chat.id,
                                             '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∑–∞–Ω—è—Ç–∏—è–º –∏–∑ –¥—Ä—É–≥–æ–≥–æ –∫—É—Ä—Å–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –µ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞.\n' +
                                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                             reply_markup=markup)
                else:
                    data = None
                    if get_role(message) == 'Admin':
                        data = execute_query(
                            'select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
                    elif get_role(message) == 'Teacher':
                        depart = \
                            execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = execute_query(
                            'select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                            [depart])
                    elif get_role(message) == 'Student':
                        group = execute_query('select group_id from user where id = ?', [int(message.from_user.id)])[0][
                            0]
                        data = execute_query(
                            'select id, name from course join course_group on id = course_id where group_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                            [group])
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("-")
                    for id, name in data:
                        markup.row("({}) {}".format(id, name))
                    bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞.")
                    bot.send_message(message.chat.id,
                                     '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫—É—Ä—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–Ω—è—Ç–∏–π.\n' +
                                     '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                     reply_markup=markup)
            except Exception as ex:
                data = None
                if get_role(message) == 'Admin':
                    data = execute_query('select id, name from course')
                elif get_role(message) == 'Teacher':
                    depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                    data = execute_query('select id, name from course where depart_id = ?', [depart])
                elif get_role(message) == 'Student':
                    group = execute_query('select group_id from user where id = ?', [int(message.from_user.id)])[0][0]
                    print(group)
                    data = execute_query(
                        'select id, name from course join course_group on id = course_id where group_id = ?', [group])
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("-")
                for id, name in data:
                    markup.row("({}) {}".format(id, name))
                bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞.")
                bot.send_message(message.chat.id,
                                 '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫—É—Ä—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–Ω—è—Ç–∏–π.\n' +
                                 '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                 reply_markup=markup)
    elif state == 'watch_lesson_answer':
        text = message.text
        text = text.split(' ')
        if text[0] == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'watch_lesson_start')
            data = None
            if get_role(message) == 'Admin':
                data = execute_query('select id, name from course')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course where depart_id = ?', [depart])
            elif get_role(message) == 'Student':
                group = execute_query('select group_id from user where id = ?', [int(message.from_user.id)])[0][0]
                print(group)
                data = execute_query(
                    'select id, name from course join course_group on id = course_id where group_id = ?', [group])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–Ω—è—Ç–∏–π.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
            del_additional_data(message)
        else:
            try:
                text[0] = text[0][1:len(text[0]) - 1]
                if text[0] == execute_query('select id from lesson where id = ? and course_id = ? and name != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lesson_type != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',[text[0], get_additional_data(message)[0]])[0][0]:
                    data_set = execute_query('select lesson.name, lesson_type, user.name, surname, telegram_id, email, description from lesson join user on lesson.teacher_id = user.id where lesson.id = ?',[text[0]])[0]
                    bot.send_message(message.chat.id, '‚Ñπ–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è: {}\n' \
                                                      '‚Ñπ–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è: {}\n' \
                                                      '‚Ñπ–ò–º—è —Ñ–∞–º–∏–ª–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: {} {}\n' \
                                                      '‚Ñπ–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: @{}\n' \
                                                      '‚Ñπ–ü–æ—á—Ç–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: {}\n' \
                                                      '‚Ñπ–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è: {}\n'.format(*data_set))
                    files = execute_query('select path from file where lesson_id = ?', [text[0]])
                    for file in files:
                        doc = open(file[0], 'rb')
                        bot.send_document(message.chat.id, doc)
                    bot.send_message(message.chat.id, '‚úÖ–í—Å–µ —Ñ–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã')
                    data = []
                    if get_role(message) == 'Admin':
                        data = execute_query('select id, name from lesson where course_id = ?',
                                             [get_additional_data(message)[0]])
                    elif get_role(message) == 'Teacher':
                        depart = \
                        execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = execute_query(
                            'select lesson.id, lesson.name from lesson join course on lesson.course_id = course.id where course_id = ? and depart_id = ?',
                            [get_additional_data(message)[0], depart])
                    elif get_role(message) == 'Student':
                        group = execute_query('select group_id from user where id = ?', [int(message.from_user.id)])[0][
                            0]
                        data = execute_query(
                            'select lesson.id, lesson.name from lesson join course_group on lesson.course_id = course_group.course_id where lesson.course_id = ? and course_group.group_id = ?',
                            [get_additional_data(message)[0], group])
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("-")
                    for id, name in data:
                        markup.row("({}) {}".format(id, name))
                    bot.send_message(message.chat.id,
                                     '–•–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ—â—ë –æ–¥–Ω–æ –∑–∞–Ω—è—Ç–∏–µ? –í—ã–±–µ—Ä–∏—Ç–µ –µ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞\n' +
                                     '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                     reply_markup=markup)
                else:
                    data = []
                    if get_role(message) == 'Admin':
                        data = execute_query('select id, name from lesson where course_id = ?', [get_additional_data(message)[0]])
                    elif get_role(message) == 'Teacher':
                        depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = execute_query('select lesson.id, lesson.name from lesson join course on lesson.course_id = course.id where course_id = ? and depart_id = ?', [get_additional_data(message)[0], depart])
                    elif get_role(message) == 'Student':
                        group = execute_query('select group_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = execute_query(
                            'select lesson.id, lesson.name from lesson join course_group on lesson.course_id = course_group.course_id where lesson.course_id = ? and course_group.group_id = ?',
                            [get_additional_data(message)[0], group])
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("-")
                    for id, name in data:
                        markup.row("({}) {}".format(id, name))
                    bot.send_message(message.chat.id,
                                     '–ó–∞–Ω—è—Ç–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∑–∞–Ω—è—Ç–∏–µ.\n' +
                                     '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                     reply_markup=markup)
            except Exception as ex:
                print(ex)
                data = []
                if get_role(message) == 'Admin':
                    data = execute_query('select id, name from lesson where course_id = ?',
                                         [get_additional_data(message)[0]])
                elif get_role(message) == 'Teacher':
                    depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                    data = execute_query(
                        'select lesson.id, lesson.name from lesson join course on lesson.course_id = course.id where course_id = ? and depart_id = ?',
                        [get_additional_data(message)[0], depart])
                elif get_role(message) == 'Student':
                    group = execute_query('select group_id from user where id = ?', [int(message.from_user.id)])[0][0]
                    data = execute_query(
                        'select lesson.id, lesson.name from lesson join course_group on lesson.course_id = course_group.course_id where lesson.course_id = ? and course_group.group_id = ?',
                        [get_additional_data(message)[0], group])
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("-")
                for id, name in data:
                    markup.row("({}) {}".format(id, name))
                bot.send_message(message.chat.id,
                                 '–ó–∞–Ω—è—Ç–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∑–∞–Ω—è—Ç–∏–µ.\n' +
                                 '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                 reply_markup=markup)
    elif state == 'del_lesson_start':
        text = message.text
        text = text.split(' ')
        if text[0] == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'Chill')
        else:
            try:
                text[0] = text[0][1:len(text[0]) - 1]
                if text[0] == execute_query(
                        'select id from course where id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                        [text[0]])[0][0]:
                    data = None
                    if get_role(message) == 'Admin':
                        data = execute_query('select id, name from lesson where course_id = ?', [text[0]])
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                        markup.row("-")
                        for id, name in data:
                            markup.row("({}) {}".format(id, name))
                        bot.send_message(message.chat.id,
                                         '–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–Ω—è—Ç–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É–¥–∞–ª–∏—Ç—å.\n' +
                                         '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                         reply_markup=markup)
                        set_state(message, 'del_lesson_submit')
                        set_additional_data(message, text[0])
                    elif get_role(message) == 'Teacher':
                        depart = \
                            execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = execute_query(
                            'select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                            [depart])
                        if (text[0],) in execute_query('select id from course where depart_id = ?', [depart]):
                            data = execute_query('select id, name from lesson where course_id = ?', [text[0]])
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                            markup.row("-")
                            for id, name in data:
                                markup.row("({}) {}".format(id, name))
                            bot.send_message(message.chat.id,
                                             '–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–Ω—è—Ç–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É–¥–∞–ª–∏—Ç—å.\n' +
                                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                             reply_markup=markup)
                            set_additional_data(message, text[0])
                            set_state(message, 'del_lesson_submit')
                        else:
                            bot.send_message(message.chat.id, '‚ùå–ö—É—Ä—Å —Å–æ–∑–¥–∞–Ω –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –¥—Ä—É–≥–æ–π –∫–∞—Ñ–µ–¥—Ä—ã.\n')
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                            markup.row("-")
                            for id, name in data:
                                markup.row("({}) {}".format(id, name))
                            bot.send_message(message.chat.id,
                                             '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫—É—Ä—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏–π.\n' +
                                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                             reply_markup=markup)
                else:
                    data = None
                    if get_role(message) == 'Admin':
                        data = execute_query(
                            'select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
                    elif get_role(message) == 'Teacher':
                        depart = \
                            execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = execute_query(
                            'select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                            [depart])
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("-")
                    for id, name in data:
                        markup.row("({}) {}".format(id, name))
                    bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞.")
                    bot.send_message(message.chat.id,
                                     '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫—É—Ä—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–Ω—è—Ç–∏–π.\n' +
                                     '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                     reply_markup=markup)
            except Exception as ex:
                data = None
                if get_role(message) == 'Admin':
                    data = execute_query('select id, name from course')
                elif get_role(message) == 'Teacher':
                    depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                    data = execute_query('select id, name from course where depart_id = ?', [depart])
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("-")
                for id, name in data:
                    markup.row("({}) {}".format(id, name))
                bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞.")
                bot.send_message(message.chat.id,
                                 '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫—É—Ä—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–Ω—è—Ç–∏–π.\n' +
                                 '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                 reply_markup=markup)
    elif state == 'del_lesson_submit':
        text = message.text
        text = text.split(' ')
        if text[0] == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'del_lesson_start')
            data = None
            if get_role(message) == 'Admin':
                data = execute_query('select id, name from course')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course where depart_id = ?', [depart])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–Ω—è—Ç–∏–π.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
            del_additional_data(message)
        else:
            try:
                text[0] = text[0][1:len(text[0]) - 1]
                if text[0] == execute_query(
                        'select id from lesson where id = ? and course_id = ? and name != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lesson_type != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                        [text[0], get_additional_data(message)[0]])[0][0]:
                    data_set = execute_query(
                        'select lesson.name, lesson_type, user.name, surname, telegram_id, email, description from lesson join user on lesson.teacher_id = user.id where lesson.id = ?',
                        [text[0]])[0]
                    files = execute_query('select count(*) from file where lesson_id = ?', [text[0]])[0][0]
                    bot.send_message(message.chat.id, '‚Ñπ–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è: {}\n' \
                                                      '‚Ñπ–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è: {}\n' \
                                                      '‚Ñπ–ò–º—è —Ñ–∞–º–∏–ª–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: {} {}\n' \
                                                      '‚Ñπ–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: @{}\n' \
                                                      '‚Ñπ–ü–æ—á—Ç–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: {}\n' \
                                                      '‚Ñπ–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è: {}\n' \
                                                      '‚Ñπ–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: {}\n'.format(*data_set, files))
                    del_additional_data(message)
                    set_additional_data(message, text[0])
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("–î–∞", "–ù–µ—Ç")
                    bot.send_message(message.chat.id,
                                     '–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ? (–î–∞/–Ω–µ—Ç)\n',
                                     reply_markup=markup)
                    set_state(message, 'del_lesson_final')
                else:
                    data = []
                    if get_role(message) == 'Admin':
                        data = execute_query('select id, name from lesson where course_id = ?',
                                             [get_additional_data(message)[0]])
                    elif get_role(message) == 'Teacher':
                        depart = \
                        execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = execute_query(
                            'select lesson.id, lesson.name from lesson join course on lesson.course_id = course.id where course_id = ? and depart_id = ?',
                            [get_additional_data(message)[0], depart])
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("-")
                    for id, name in data:
                        markup.row("({}) {}".format(id, name))
                    bot.send_message(message.chat.id,
                                     '–ó–∞–Ω—è—Ç–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∑–∞–Ω—è—Ç–∏–µ.\n' +
                                     '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                     reply_markup=markup)
                    set_state(message, 'del_lesson_final')
            except Exception as ex:
                data = []
                if get_role(message) == 'Admin':
                    data = execute_query('select id, name from lesson where course_id = ?',
                                         [get_additional_data(message)[0]])
                elif get_role(message) == 'Teacher':
                    depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                    data = execute_query(
                        'select lesson.id, lesson.name from lesson join course on lesson.course_id = course.id where course_id = ? and depart_id = ?',
                        [get_additional_data(message)[0], depart])
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("-")
                for id, name in data:
                    markup.row("({}) {}".format(id, name))
                bot.send_message(message.chat.id,
                                 '–ó–∞–Ω—è—Ç–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∑–∞–Ω—è—Ç–∏–µ.\n' +
                                 '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                 reply_markup=markup)
    elif state == 'del_lesson_final':
        text = message.text
        if text.upper() == '–î–ê':
            files = execute_query('select path from file where lesson_id = ?', [get_additional_data(message)[0]])
            for file in files:
                os.remove(file[0])
            execute_query('delete from file where lesson_id = ?', [get_additional_data(message)[0]])
            typo = execute_query('select lesson_type from lesson where id = ?', [get_additional_data(message)[0]])[0][0]
            if typo == "–õ–µ–∫—Ü–∏—è":
                id, n = execute_query(
                    'select course.id, lections_n from course join lesson on course.id = lesson.course_id where lesson.id = ?',
                    [get_additional_data(message)[0]])[0]
                n -= 1
                execute_query('update course set lections_n = ? where id = ?', [n, id])
            elif typo == "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ":
                id, n = execute_query(
                    'select course.id, practical_n from course join lesson on course.id = lesson.course_id where lesson.id = ?',
                    [get_additional_data(message)[0]])[0]
                n -= 1
                execute_query('update course set practical_n = ? where id = ?', [n, id])
            elif typo == "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞":
                id, n = execute_query(
                    'select course.id, labs_n from course join lesson on course.id = lesson.course_id where lesson.id = ?',
                    [get_additional_data(message)[0]])[0]
                n -= 1
                execute_query('update course set labs_n = ? where id = ?', [n, id])
            execute_query('delete from lesson where id = ?', [get_additional_data(message)[0]])
            data = None
            if get_role(message) == 'Admin':
                data = execute_query('select id, name from course')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course where depart_id = ?', [depart])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id, '‚úÖ–ó–∞–Ω—è—Ç–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ')
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–Ω—è—Ç–∏–π.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
            set_state(message, 'del_lesson_start')
            del_additional_data(message)
        elif text.upper() == '–ù–ï–¢':
            data = None
            if get_role(message) == 'Admin':
                data = execute_query('select id, name from course')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course where depart_id = ?', [depart])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id, '‚úÖ–ó–∞–Ω—è—Ç–∏–µ –Ω–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ')
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–Ω—è—Ç–∏–π.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
            set_state(message, 'del_lesson_start')
            del_additional_data(message)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–î–∞", "–ù–µ—Ç")
            bot.send_message(message.chat.id,
                             '–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ? (–î–∞/–Ω–µ—Ç)\n',
                             reply_markup=markup)
            set_state(message, 'del_lesson_final')
    elif state == 'edit_lesson_start':
        text = message.text
        text = text.split(' ')
        if text[0] == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'Chill')
        else:
            try:
                text[0] = text[0][1:len(text[0]) - 1]
                if text[0] == execute_query(
                        'select id from course where id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                        [text[0]])[0][0]:
                    data = None
                    if get_role(message) == 'Admin':
                        data = execute_query('select id, name from lesson where course_id = ?', [text[0]])
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                        markup.row("-")
                        for id, name in data:
                            markup.row("({}) {}".format(id, name))
                        bot.send_message(message.chat.id,
                                         '–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–Ω—è—Ç–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å.\n' +
                                         '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                         reply_markup=markup)
                        set_state(message, 'edit_lesson_answer')
                        set_additional_data(message, text[0])
                    elif get_role(message) == 'Teacher':
                        depart = \
                            execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = execute_query(
                            'select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                            [depart])
                        if (text[0],) in execute_query('select id from course where depart_id = ?', [depart]):
                            data = execute_query('select id, name from lesson where course_id = ?', [text[0]])
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                            markup.row("-")
                            for id, name in data:
                                markup.row("({}) {}".format(id, name))
                            bot.send_message(message.chat.id,
                                             '–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–Ω—è—Ç–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å.\n' +
                                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                             reply_markup=markup)
                            set_additional_data(message, text[0])
                            set_state(message, 'edit_lesson_answer')
                        else:
                            bot.send_message(message.chat.id, '‚ùå–ö—É—Ä—Å —Å–æ–∑–¥–∞–Ω –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –¥—Ä—É–≥–æ–π –∫–∞—Ñ–µ–¥—Ä—ã.\n')
                            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                            markup.row("-")
                            for id, name in data:
                                markup.row("({}) {}".format(id, name))
                            bot.send_message(message.chat.id,
                                             '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫—É—Ä—Å –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏–π.\n' +
                                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                             reply_markup=markup)
                else:
                    data = None
                    if get_role(message) == 'Admin':
                        data = execute_query(
                            'select id, name from course where description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"')
                    elif get_role(message) == 'Teacher':
                        depart = \
                            execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = execute_query(
                            'select id, name from course where depart_id = ? and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and practical_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lections_n != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and credits != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and depart_id != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                            [depart])
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("-")
                    for id, name in data:
                        markup.row("({}) {}".format(id, name))
                    bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞.")
                    bot.send_message(message.chat.id,
                                     '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫—É—Ä—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–Ω—è—Ç–∏–π.\n' +
                                     '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                     reply_markup=markup)
            except Exception as ex:
                data = None
                if get_role(message) == 'Admin':
                    data = execute_query('select id, name from course')
                elif get_role(message) == 'Teacher':
                    depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                    data = execute_query('select id, name from course where depart_id = ?', [depart])
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("-")
                for id, name in data:
                    markup.row("({}) {}".format(id, name))
                bot.send_message(message.chat.id, "‚ùå–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å–∞.")
                bot.send_message(message.chat.id,
                                 '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫—É—Ä—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–Ω—è—Ç–∏–π.\n' +
                                 '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                 reply_markup=markup)
    elif state == 'edit_lesson_answer':
        text = message.text
        text = text.split(' ')
        if text[0] == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            set_state(message, 'edit_lesson_start')
            data = None
            if get_role(message) == 'Admin':
                data = execute_query('select id, name from course')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course where depart_id = ?', [depart])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–Ω—è—Ç–∏–π.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
            del_additional_data(message)
        else:
            try:
                text[0] = text[0][1:len(text[0]) - 1]
                if text[0] == execute_query(
                        'select id from lesson where id = ? and course_id = ? and name != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and lesson_type != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ" and description != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"',
                        [text[0], get_additional_data(message)[0]])[0][0]:
                    data_set = execute_query(
                        'select lesson.name, lesson_type, user.name, surname, telegram_id, email, description from lesson join user on lesson.teacher_id = user.id where lesson.id = ?',
                        [text[0]])[0]
                    files = execute_query('select count(*) from file where lesson_id = ?', [text[0]])[0][0]
                    bot.send_message(message.chat.id, '‚Ñπ–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è: {}\n' \
                                                      '‚Ñπ–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è: {}\n' \
                                                      '‚Ñπ–ò–º—è —Ñ–∞–º–∏–ª–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: {} {}\n' \
                                                      '‚Ñπ–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: @{}\n' \
                                                      '‚Ñπ–ü–æ—á—Ç–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: {}\n' \
                                                      '‚Ñπ–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è: {}\n' \
                                                      '‚Ñπ–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: {}\n'.format(*data_set, files))
                    del_additional_data(message)
                    set_additional_data(message, text[0])
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("–¢–µ–º–∞ –∑–∞–Ω—è—Ç–∏—è", "–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è", "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è")
                    markup.row("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã", "–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã")
                    markup.row("-")
                    bot.send_message(message.chat.id,
                                     '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç\n',
                                     reply_markup=markup)
                    set_state(message, 'edit_lesson_choise')
                else:
                    data = []
                    if get_role(message) == 'Admin':
                        data = execute_query('select id, name from lesson where course_id = ?',
                                             [get_additional_data(message)[0]])
                    elif get_role(message) == 'Teacher':
                        depart = \
                            execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                        data = execute_query(
                            'select lesson.id, lesson.name from lesson join course on lesson.course_id = course.id where course_id = ? and depart_id = ?',
                            [get_additional_data(message)[0], depart])
                    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                    markup.row("-")
                    for id, name in data:
                        markup.row("({}) {}".format(id, name))
                    bot.send_message(message.chat.id,
                                     '–ó–∞–Ω—è—Ç–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∑–∞–Ω—è—Ç–∏–µ.\n' +
                                     '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                     reply_markup=markup)
                    set_state(message, 'del_lesson_final')
            except Exception as ex:
                data = []
                if get_role(message) == 'Admin':
                    data = execute_query('select id, name from lesson where course_id = ?',
                                         [get_additional_data(message)[0]])
                elif get_role(message) == 'Teacher':
                    depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                    data = execute_query(
                        'select lesson.id, lesson.name from lesson join course on lesson.course_id = course.id where course_id = ? and depart_id = ?',
                        [get_additional_data(message)[0], depart])
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.row("-")
                for id, name in data:
                    markup.row("({}) {}".format(id, name))
                bot.send_message(message.chat.id,
                                 '–ó–∞–Ω—è—Ç–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∑–∞–Ω—è—Ç–∏–µ.\n' +
                                 '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                                 reply_markup=markup)
    elif state == 'edit_lesson_choise':
        if message.text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            del_additional_data(message)
            data = None
            if get_role(message) == 'Admin':
                data = execute_query('select id, name from course')
            elif get_role(message) == 'Teacher':
                depart = execute_query('select depart_id from user where id = ?', [int(message.from_user.id)])[0][0]
                data = execute_query('select id, name from course where depart_id = ?', [depart])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            for id, name in data:
                markup.row("({}) {}".format(id, name))
            bot.send_message(message.chat.id,
                             '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–Ω—è—Ç–∏–π.\n' +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.',
                             reply_markup=markup)
            set_state(message, 'edit_lesson_start')
            del_additional_data(message)
        elif (message.text).upper() == '–¢–ï–ú–ê –ó–ê–ù–Ø–¢–ò–Ø':
            set_state(message, 'change_lesson_name')
            data = execute_query('select name from lesson where id = ?', [get_additional_data(message)[0]])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–°—Ç–∞—Ä–∞—è —Ç–µ–º–∞ –∑–∞–Ω—è—Ç–∏—è: {}\n".format(data) +
                             "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ç–µ–º—É –∑–∞–Ω—è—Ç–∏—è\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif (message.text).upper() == '–¢–ò–ü –ó–ê–ù–Ø–¢–ò–Ø':
            set_state(message, 'change_lesson_type')
            data = execute_query('select lesson_type from lesson where id = ?', [get_additional_data(message)[0]])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–õ–µ–∫—Ü–∏—è", "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ", "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞")
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–°—Ç–∞—Ä—ã–π —Ç–∏–ø –∑–∞–Ω—è—Ç–∏—è: {}\n".format(data) +
                             "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–∏–ø –∑–∞–Ω—è—Ç–∏—è –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö: –õ–µ–∫—Ü–∏—è, –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ, –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif (message.text).upper() == '–û–ü–ò–°–ê–ù–ò–ï –ó–ê–ù–Ø–¢–ò–Ø':
            set_state(message, 'change_lesson_descr')
            data = execute_query('select description from lesson where id = ?', [get_additional_data(message)[0]])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, "‚Ñπ–°—Ç–∞—Ä–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è: {}\n".format(data) +
                             "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∑–∞–Ω—è—Ç–∏—è\n" +
                             '‚ö† –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.', reply_markup=markup)
        elif (message.text).upper() == '–£–î–ê–õ–ò–¢–¨ –í–°–ï –§–ê–ô–õ–´':
            set_state(message, 'change_lesson_delfile')
            data = execute_query('select count(*) from file where lesson_id = ?', [get_additional_data(message)[0]])[0][0]
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–î–∞", "–ù–µ—Ç")
            bot.send_message(message.chat.id, "‚Ñπ–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ –≤ –∑–∞–Ω—è—Ç–∏–∏: {}\n".format(data) +
                             "–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã? (–î–∞/–ù–µ—Ç)\n", reply_markup=markup)
        elif (message.text).upper() == '–î–û–ë–ê–í–ò–¢–¨ –§–ê–ô–õ–´':
            set_state(message, 'change_lesson_addfile')
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚Ñπ–ù–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏—è –∫ –∑–∞–Ω—è—Ç–∏—é. –ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å —Ñ–∞–π–ª—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –≤ —á–∞—Ç.\n‚ö†‚ö†‚ö†–í–ê–ñ–ù–û! –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è —Ñ–∞–π–ª–æ–≤ PDF —Ñ–æ—Ä–º–∞—Ç–∞. –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤, –∏–Ω–∞—á–µ –æ–Ω–∏ –Ω–µ –±—É–¥—É—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã',
                             reply_markup=markup)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–¢–µ–º–∞ –∑–∞–Ω—è—Ç–∏—è", "–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è", "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è")
            markup.row("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã", "–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç\n',
                             reply_markup=markup)
    elif state == 'change_lesson_name':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–¢–µ–º–∞ –∑–∞–Ω—è—Ç–∏—è", "–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è", "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è")
            markup.row("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã", "–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç\n',
                             reply_markup=markup)
            set_state(message, 'edit_lesson_choise')
        elif all([re.fullmatch('[A-Za-z–ê-–Ø–∞-—è0-9—ë–Å|–á—ó–Ñ—î–Ü—ñ“ê“ë]{1,25}', i) for i in
                  text.split(' ')]) and text != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ":
            execute_query('update lesson set name = ? where id = ?', [text, get_additional_data(message)[0]])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–¢–µ–º–∞ –∑–∞–Ω—è—Ç–∏—è", "–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è", "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è")
            markup.row("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã", "–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚úÖ–ù–æ–≤–∞—è —Ç–µ–º–∞ –∑–∞–ø–∏—Å–∞–Ω–∞. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç. –û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –≤—ã—Ö–æ–¥–∞.\n',
                             reply_markup=markup)
            set_state(message, 'edit_lesson_choise')
        else:
            bot.send_message(message.chat.id,
                             '‚ùå–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ, —É–¥–∞–ª–∏—Ç–µ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –±—É–∫–≤–æ–π –∏–ª–∏ —Ü–∏—Ñ—Ä–æ–π.\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã.')
    elif state == 'change_lesson_type':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–¢–µ–º–∞ –∑–∞–Ω—è—Ç–∏—è", "–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è", "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è")
            markup.row("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã", "–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç\n',
                             reply_markup=markup)
            set_state(message, 'edit_lesson_choise')
        elif text.upper() in ("–õ–ï–ö–¶–ò–Ø", "–ü–†–ê–ö–¢–ò–ß–ï–°–ö–û–ï –ó–ê–ù–Ø–¢–ò–ï", "–õ–ê–ë–û–†–ê–¢–û–†–ù–ê–Ø –†–ê–ë–û–¢–ê"):
            type_l = ''
            typo = execute_query('select lesson_type from lesson where id = ?', [get_additional_data(message)[0]])[0][0]
            if typo == "–õ–µ–∫—Ü–∏—è":
                id, n = execute_query(
                    'select course.id, lections_n from course join lesson on course.id = lesson.course_id where lesson.id = ?',
                    [get_additional_data(message)[0]])[0]
                n -= 1
                execute_query('update course set lections_n = ? where id = ?', [n, id])
            elif typo == "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ":
                type_l = '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ'
                id, n = execute_query(
                    'select course.id, practical_n from course join lesson on course.id = lesson.course_id where lesson.id = ?',
                    [get_additional_data(message)[0]])[0]
                n -= 1
            elif typo == "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞":
                type_l = "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞"
                id, n = execute_query(
                    'select course.id, labs_n from course join lesson on course.id = lesson.course_id where lesson.id = ?',
                    [get_additional_data(message)[0]])[0]
                n -= 1
            if text.upper() == "–õ–ï–ö–¶–ò–Ø":
                type_l = '–õ–µ–∫—Ü–∏—è'
                id, n = execute_query(
                    'select course.id, lections_n from course join lesson on course.id = lesson.course_id where lesson.id = ?',
                    [get_additional_data(message)[0]])[0]
                n += 1
                execute_query('update course set lections_n = ? where id = ?', [n, id])
            elif text.upper() == "–ü–†–ê–ö–¢–ò–ß–ï–°–ö–û–ï –ó–ê–ù–Ø–¢–ò–ï":
                type_l = '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ'
                id, n = execute_query(
                    'select course.id, practical_n from course join lesson on course.id = lesson.course_id where lesson.id = ?',
                    [get_additional_data(message)[0]])[0]
                n += 1
                execute_query('update course set practical_n = ? where id = ?', [n, id])
            elif text.upper() == "–õ–ê–ë–û–†–ê–¢–û–†–ù–ê–Ø –†–ê–ë–û–¢–ê":
                type_l = "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞"
                id, n = execute_query(
                    'select course.id, labs_n from course join lesson on course.id = lesson.course_id where lesson.id = ?',
                    [get_additional_data(message)[0]])[0]
                n += 1
                execute_query('update course set labs_n = ? where id = ?', [n, id])
            execute_query('update lesson set lesson_type = ? where id = ?',
                          [type_l, get_additional_data(message)[0]])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–¢–µ–º–∞ –∑–∞–Ω—è—Ç–∏—è", "–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è", "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è")
            markup.row("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã", "–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚úÖ–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è –∑–∞–ø–∏—Å–∞–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç\n',
                             reply_markup=markup)
            set_state(message, 'edit_lesson_choise')
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–õ–µ–∫—Ü–∏—è", "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ", "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚ùå–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö: –ª–µ–∫—Ü–∏—è, –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ, –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞',
                             reply_markup=markup)
    elif state == 'change_lesson_descr':
        text = message.text
        if text == '-':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–¢–µ–º–∞ –∑–∞–Ω—è—Ç–∏—è", "–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è", "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è")
            markup.row("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã", "–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç\n',
                             reply_markup=markup)
            set_state(message, 'edit_lesson_choise')
        elif len(text) > 500:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚ùå–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º–∞—è –¥–ª–∏–Ω–Ω–∞ - 500 —Å–∏–º–≤–æ–ª–æ–≤',
                         reply_markup=markup)
        elif len(text) <= 500 and text != "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ":
            execute_query('update lesson set description = ? where id = ?', [text, get_additional_data(message)[0]])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–¢–µ–º–∞ –∑–∞–Ω—è—Ç–∏—è", "–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è", "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è")
            markup.row("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã", "–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚úÖ–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç\n',
                             reply_markup=markup)
            set_state(message, 'edit_lesson_choise')
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id, '‚ùå–ó–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n' +
                             '‚ö†–û—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –¥–ª—è –æ—Ç–º–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è.')
    elif state == 'change_lesson_delfile':
        text = message.text
        if text.upper() == '–î–ê':
            files = execute_query('select path from file where lesson_id = ?', [get_additional_data(message)[0]])
            for file in files:
                os.remove(file[0])
            execute_query('delete from file where lesson_id = ?', [get_additional_data(message)[0]])
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–¢–µ–º–∞ –∑–∞–Ω—è—Ç–∏—è", "–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è", "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è")
            markup.row("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã", "–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚úÖ–§–∞–π–ª—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç\n',
                             reply_markup=markup)
            set_state(message, 'edit_lesson_choise')
        elif text.upper() == '–ù–ï–¢':
            bot.send_message(message.chat.id, "‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–¢–µ–º–∞ –∑–∞–Ω—è—Ç–∏—è", "–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è", "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è")
            markup.row("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã", "–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚úÖ–§–∞–π–ª—ã –Ω–µ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω—ã. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç\n',
                             reply_markup=markup)
            set_state(message, 'edit_lesson_choise')
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–î–∞", "–ù–µ—Ç")
            bot.send_message(message.chat.id, "–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã? (–î–∞/–ù–µ—Ç)\n", reply_markup=markup)
    elif state == 'change_lesson_addfile':
        text = message.text
        if text == '-':
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("–¢–µ–º–∞ –∑–∞–Ω—è—Ç–∏—è", "–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è", "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è")
            markup.row("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã", "–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã")
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚úÖ–§–∞–π–ª—ã –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç\n',
                             reply_markup=markup)
            set_state(message, 'edit_lesson_choise')
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.row("-")
            bot.send_message(message.chat.id,
                             '‚Ñπ–ù–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏—è –∫ –∑–∞–Ω—è—Ç–∏—é. –ï—Å–ª–∏ –≤—ã –Ω–µ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Ñ–∞–π–ª—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "-" –≤ —á–∞—Ç.\n‚ö†‚ö†‚ö†–í–ê–ñ–ù–û! –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Ç–æ–ª—å–∫–æ PDF —Ñ–æ—Ä–º–∞—Ç–∞. –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤, –∏–Ω–∞—á–µ –æ–Ω–∏ –Ω–µ –±—É–¥—É—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã',
                             reply_markup=markup)

@bot.message_handler(content_types=['document'])
def handle_file(message):
    state = get_state(message)
    if state == 'add_lesson_file' or state == 'change_lesson_addfile':
        try:
            if get_additional_data(message) is not None:
                file_id_info = bot.get_file(message.document.file_id)
                downloaded_file = bot.download_file(file_id_info.file_path)
                id = str(message.from_user.id) + str(datetime.datetime.now())
                path = 'files\\' + id
                path = path.replace(' ', '_')
                path = path.replace(':', '_')
                path = path.replace('.', '_')
                path+='.pdf'
                with open(path, 'wb') as new_file:
                    new_file.write(downloaded_file)
                execute_query('insert into file (id, lesson_id, path) values (?, ?, ?)',
                              [id, get_additional_data(message)[0], path])
                bot.send_message(message.chat.id, '‚úÖ–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω')
        except Exception as ex:
            pass


bot.polling()



'''
 
 doc = open('file1.pdf', 'rb')
            bot.send_document(message.chat.id, doc)
 
@bot.message_handler(content_types=['document'])
def send_text(message):
    file_id_info = bot.get_file(message.document.file_id)
    downloaded_file = bot.download_file(file_id_info.file_path)
    with open('file1.pdf', 'wb') as new_file:
        new_file.write(downloaded_file)

@bot.message_handler(commands=['get'])
def send_text(message):
    doc = open('file', 'rb')
    print()
    bot.send_document(message.chat.id, doc)


    '''